{"config":{"phpVersion":70421,"phpExtensions":"5fe31a84ebd7e3c744ee5d668729dab0","tabWidth":4,"encoding":"utf-8","recordErrors":true,"annotations":true,"configData":{"installed_paths":"..\/..\/laminas\/laminas-coding-standard\/src,..\/..\/slevomat\/coding-standard,..\/..\/webimpress,..\/..\/webimpress\/coding-standard\/src"},"codeHash":"51d07e15f0d2ec720c7df514b0403220","rulesetHash":"63b9b4211f86db802833db1143ea5334"},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Barcode.php":{"hash":"1bdc9f3eaeb6d25de23c5912bcfc2a1933206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"52":{"19":[{"message":"Method \\Laminas\\Barcode\\Barcode::getObjectPluginManager() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"ObjectPluginManager\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"66":{"19":[{"message":"Method \\Laminas\\Barcode\\Barcode::getRendererPluginManager() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"RendererPluginManager\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"98":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"92":{"8":[{"message":"Expected 14 spaces after parameter name; 9 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"93":{"8":[{"message":"Expected 13 spaces after parameter name; 8 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"94":{"8":[{"message":"Expected 8 spaces after parameter name; 3 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"95":{"8":[{"message":"Expected 7 spaces after parameter name; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"100":{"19":[{"message":"Type hint \"bool\" missing for $automaticRenderError","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Barcode::factory() does not have native type hint for its parameter $automaticRenderError but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Barcode::factory() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"RendererInterface\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"96":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 1 spaces after parameter name; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"115":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"118":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"121":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"150":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"148":{"8":[{"message":"Expected 7 spaces after parameter name; 8 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"149":{"8":[{"message":"Expected 1 spaces after parameter name; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"153":{"19":[{"message":"Method \\Laminas\\Barcode\\Barcode::makeBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Object\\ObjectInterface\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"173":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"167":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"204":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"202":{"8":[{"message":"Expected 7 spaces after parameter name; 11 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"203":{"8":[{"message":"Expected 1 spaces after parameter name; 5 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"207":{"19":[{"message":"Method \\Laminas\\Barcode\\Barcode::makeRenderer() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"RendererInterface\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"225":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"221":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"258":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"254":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Barcode::render() does not specify type hint for items of its traversable parameter $barcode.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"255":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 19 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"256":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 34 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Barcode::render() does not specify type hint for items of its traversable parameter $barcodeConfig.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"257":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 34 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Barcode::render() does not specify type hint for items of its traversable parameter $rendererConfig.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"259":{"19":[{"message":"Method \\Laminas\\Barcode\\Barcode::render() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"271":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Barcode::draw() does not specify type hint for items of its traversable parameter $barcode.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"272":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 19 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"273":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 35 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Barcode::draw() does not specify type hint for items of its traversable parameter $barcodeConfig.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"274":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 35 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Barcode::draw() does not specify type hint for items of its traversable parameter $rendererConfig.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"289":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"292":{"19":[{"message":"Type hint \"string\" missing for $font","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Barcode::setBarcodeFont() does not have native type hint for its parameter $font but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Barcode::setBarcodeFont() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"302":{"19":[{"message":"Method \\Laminas\\Barcode\\Barcode::getBarcodeFont() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":260,"81-120":17}},"Line indent":{"values":{"spaces":261}},"PHP keyword case":{"values":{"lower":129}},"Multiple statements on same line":{"values":{"no":50}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":9}},"Function opening brace placement":{"values":{"new line":6}},"Function has doc comment":{"values":{"yes":9}},"Spaces after control structure open parenthesis":{"values":[23]},"Spaces before control structure close parenthesis":{"values":[23]},"Blank lines at start of control structure":{"values":[27]},"Blank lines at end of control structure":{"values":[27]},"Control structure defined inline":{"values":{"no":25}},"Spacing before object operator":{"values":[28]},"Spacing after object operator":{"values":[28]},"Space before operator":{"values":{"1":10}},"Space after operator":{"values":{"1":33}},"PHP constant case":{"values":{"lower":3}},"Short array syntax used":{"values":{"yes":10}},"Array end comma":{"values":{"no":10}},"Inline comment style":{"values":{"\/* ... *\/":7}},"PHP type case":{"values":{"lower":4}},"Spacing after cast statement":{"values":{"1":4}},"Adjacent assignments aligned":{"values":{"yes":2}}},"errorCount":58,"warningCount":0,"fixableCount":35,"numTokens":1888},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Exception\\ExceptionInterface.php":{"hash":"893b47011f41bcb6cc90c5f72a22876333206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":39},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Exception\\InvalidArgumentException.php":{"hash":"3ac2d4ef1cf844d02506f5016064d50633206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":8,"81-120":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":48},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Exception\\OutOfRangeException.php":{"hash":"555306a5bc83086af06208d3ed1f12c833206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":8,"81-120":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":48},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Exception\\RendererCreationException.php":{"hash":"08ab46200ea69ce5573342f18e7bf48133206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9,"81-120":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":53},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Exception\\RuntimeException.php":{"hash":"3d64c410e3f4bb175e2869aab90e808333206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":48},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Exception\\UnexpectedValueException.php":{"hash":"47c15cc6878e27e0917eda6f38e6188933206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":8,"81-120":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":48},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\AbstractObject.php":{"hash":"d22985c2546977dd986a3ad1d4db7f8b33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"54":{"8":[{"message":"@var annotation of property \\Laminas\\Barcode\\Object\\AbstractObject::$instructions does not specify type hint for its items.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":false}]},"257":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::__construct() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"265":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"268":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"278":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"279":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getDefaultOptions() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"286":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::setOptions() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"289":{"12":[{"message":"Type hint \"array\" missing for $options","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setOptions() does not have native type hint for its parameter $options but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"296":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"303":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"306":{"12":[{"message":"Type hint \"string\" missing for $namespace","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarcodeNamespace() does not have native type hint for its parameter $namespace but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarcodeNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"317":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getBarcodeNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"327":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getType() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"337":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"335":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"339":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarHeight() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"345":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"353":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"355":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getBarHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"365":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"363":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"367":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarThinWidth() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarThinWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"373":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"381":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"383":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getBarThinWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"393":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"391":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"395":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarThickWidth() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBarThickWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"401":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"409":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"411":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getBarThickWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"422":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"420":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer|float|string|boolean\" but found \"int|float|string|bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"424":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setFactor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"430":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"439":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"441":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getFactor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"451":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"449":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"453":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setForeColor() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setForeColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"463":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"470":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"472":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getForeColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"482":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"480":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"484":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBackgroundColor() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setBackgroundColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"494":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"501":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"503":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getBackgroundColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"511":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"514":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithBorder() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithBorder() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"523":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"525":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getWithBorder() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"533":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"536":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithQuietZones() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithQuietZones() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"545":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"547":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getWithQuietZones() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"557":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setReverseColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"570":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"568":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer|float|string|boolean\" but found \"int|float|string|bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"572":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setOrientation() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"583":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getOrientation() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"591":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"594":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"605":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"610":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"617":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"618":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"621":{"15":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"bool\" missing for $withoutChecksum","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addLeadingZeros() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addLeadingZeros() does not have native type hint for its parameter $withoutChecksum but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addLeadingZeros() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"635":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"644":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getRawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"654":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getTextToDisplay() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"668":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"671":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setDrawText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setDrawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"680":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"682":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getDrawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"693":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"691":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"695":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setStretchText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setStretchText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"705":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"707":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getStretchText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"717":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"720":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithChecksum() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"724":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"732":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"734":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getWithChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"746":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"744":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"748":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithChecksumInText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setWithChecksumInText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"752":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"760":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"762":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getWithChecksumInText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"768":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"771":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setProvidedChecksum() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true}]},"779":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"781":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getProvidedChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"793":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"791":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer|string\" but found \"int|string\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"795":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setFont() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"816":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"823":{"8":[{"message":"Expected \"integer|string\" but found \"int|string\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"835":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"833":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"837":{"12":[{"message":"Type hint \"float\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setFontSize() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::setFontSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"859":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getFontSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"868":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"870":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getQuietZone() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"883":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"882":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::addInstruction() does not specify type hint for items of its traversable parameter $instruction.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"884":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addInstruction() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"894":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getInstructions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"892":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::getInstructions() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"905":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"902":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::addPolygon() does not specify type hint for items of its traversable parameter $points.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"903":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"904":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"906":{"15":[{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"bool\" missing for $filled","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addPolygon() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addPolygon() does not have native type hint for its parameter $filled but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addPolygon() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"910":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"929":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"922":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"923":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 5 spaces after parameter type; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"924":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 5 spaces after parameter type; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"925":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"926":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 7 spaces after parameter type; 4 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"927":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"928":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"float|integer\" but found \"float|int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"930":{"15":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $size","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $position","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $font","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $alignment","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addText() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addText() does not have native type hint for its parameter $size but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addText() does not have native type hint for its parameter $position but it should be possible to add it based on @param annotation \"int[]\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addText() does not have native type hint for its parameter $font but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addText() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addText() does not have native type hint for its parameter $alignment but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::addText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"941":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"957":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"959":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"972":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"971":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"970":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"973":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string|null\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"977":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"982":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"992":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"991":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"989":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"990":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"993":{"15":[{"message":"Type hint \"int\" missing for $min","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $max","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkRatio() does not have native type hint for its parameter $min but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkRatio() does not have native type hint for its parameter $max but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1010":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1009":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1011":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkFontAndOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1024":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1026":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::calculateWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1036":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1038":{"24":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1043":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1045":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::calculateHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1055":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1057":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::calculateBarcodeHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1064":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"1072":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1071":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1074":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getHeight() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1080":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"1088":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1087":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1090":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getWidth() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1096":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"1104":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1107":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getOffsetLeft() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getOffsetLeft() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1120":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"1128":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"1131":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getOffsetTop() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::getOffsetTop() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1144":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"1155":{"15":[{"message":"Type hint \"float\" missing for $x1","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $y1","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::rotate() does not have native type hint for its parameter $x1 but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::rotate() does not have native type hint for its parameter $y1 but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::rotate() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1151":{"8":[{"message":"Parameter comment must start with a capital letter","source":"Squiz.Commenting.FunctionComment.ParamCommentNotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1152":{"8":[{"message":"Parameter comment must start with a capital letter","source":"Squiz.Commenting.FunctionComment.ParamCommentNotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1153":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::rotate() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"1171":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::draw() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1169":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::draw() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"1182":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1183":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::drawBarcode() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1229":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"1238":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1239":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::drawBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1261":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1262":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::drawText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1305":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1306":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::validateText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::validateText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1304":{"8":[{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1316":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1314":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1315":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::validateSpecificText() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"1317":{"15":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $options","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::validateSpecificText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::validateSpecificText() does not have native type hint for its parameter $options but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::validateSpecificText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1355":{"24":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1353":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\AbstractObject::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"1359":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1360":{"24":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::checkSpecificParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1364":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1365":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::preDrawBarcode() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"1372":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"1373":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\AbstractObject::postDrawBarcode() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":1230,"81-120":16,"121-150":4,"151 or more":2}},"Line indent":{"values":{"spaces":1213}},"PHP keyword case":{"values":{"lower":351}},"Multiple statements on same line":{"values":{"no":238}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":294,"newline":2}},"Short array syntax used":{"values":{"yes":11}},"Array end comma":{"values":{"no":3,"yes":8}},"PHP constant case":{"values":{"lower":33}},"Function opening brace placement":{"values":{"new line":68}},"Function has doc comment":{"values":{"yes":72}},"Spacing before object operator":{"values":[235]},"Spacing after object operator":{"values":[235]},"Spaces after control structure open parenthesis":{"values":[46]},"Spaces before control structure close parenthesis":{"values":[46]},"Blank lines at start of control structure":{"values":[51]},"Blank lines at end of control structure":{"values":[51]},"Control structure defined inline":{"values":{"no":51}},"Space before operator":{"values":{"1":166,"newline":10}},"Adjacent assignments aligned":{"values":{"yes":13}},"CamelCase method name":{"values":{"yes":71}},"Spacing before string concat":{"values":{"1":4}},"Spacing after string concat":{"values":{"1":4}},"PHP type case":{"values":{"lower":20}},"Spacing after cast statement":{"values":{"1":18}},"Use of ELSE IF or ELSEIF":{"values":{"elseif":3}},"Inline comment style":{"values":{"\/\/ ...":7}},"Spacing between in\/decrementor and variable":{"values":[1]}},"errorCount":308,"warningCount":0,"fixableCount":185,"numTokens":8624},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Cepnet.php":{"hash":"37fbd43a6db9a5362fbba8bea44c8fa233206","errors":{"41":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Cepnet::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"55":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Cepnet::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Cepnet::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Cepnet::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"76":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Cepnet::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"105":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"104":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"107":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Cepnet::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Cepnet::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":99,"81-120":2}},"Line indent":{"values":{"spaces":89}},"PHP keyword case":{"values":{"lower":25}},"Multiple statements on same line":{"values":{"no":28}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":45}},"Short array syntax used":{"values":{"yes":7}},"Array end comma":{"values":{"yes":1,"no":6}},"CamelCase method name":{"values":{"yes":5}},"Function opening brace placement":{"values":{"new line":5}},"Function has doc comment":{"values":{"yes":5}},"Spacing before object operator":{"values":[21]},"Spacing after object operator":{"values":[21]},"Adjacent assignments aligned":{"values":{"yes":4}},"PHP constant case":{"values":{"lower":3}},"Space before operator":{"values":{"1":16}},"Inline comment style":{"values":{"\/\/ ...":3}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}}},"errorCount":11,"warningCount":0,"fixableCount":8,"numTokens":798},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Codabar.php":{"hash":"43aad88616b6f3f71183bc7843bf295333206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"49":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"51":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Codabar::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"60":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"70":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Codabar::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"79":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Codabar::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"77":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Codabar::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"90":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"88":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":85,"81-120":1}},"Line indent":{"values":{"spaces":74}},"PHP keyword case":{"values":{"lower":23}},"Multiple statements on same line":{"values":{"no":18}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":39}},"Short array syntax used":{"values":{"yes":4}},"Array end comma":{"values":{"yes":1,"no":3}},"CamelCase method name":{"values":{"yes":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"yes":3}},"Adjacent assignments aligned":{"values":{"yes":2}},"Spacing before object operator":{"values":[11]},"Spacing after object operator":{"values":[11]},"Spaces after control structure open parenthesis":{"values":[4]},"Spaces before control structure close parenthesis":{"values":[4]},"Blank lines at start of control structure":{"values":[4]},"Blank lines at end of control structure":{"values":[4]},"Control structure defined inline":{"values":{"no":4}},"Space before operator":{"values":{"1":8}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":9,"warningCount":0,"fixableCount":8,"numTokens":640},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Code128.php":{"hash":"65db2bc5557338317951561e453b7c5e33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"30":{"9":[{"message":"@var annotation of property \\Laminas\\Barcode\\Object\\Code128::$convertedText does not specify type hint for its items.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":false}]},"482":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"484":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code128::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"492":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"504":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code128::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"513":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code128::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"511":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Code128::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"531":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"556":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"563":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"566":{"15":[{"message":"Type hint \"string\" missing for $string","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Code128::convertToBarcodeChars() does not have native type hint for its parameter $string but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Code128::convertToBarcodeChars() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"564":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Code128::convertToBarcodeChars() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"584":{"17":[{"message":"Expected 0 spaces after opening bracket; newline found","source":"Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"597":{"21":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"601":{"23":[{"message":"Expected 0 spaces after opening bracket; newline found","source":"Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"612":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"615":{"23":[{"message":"Expected 0 spaces after opening bracket; newline found","source":"Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"626":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"636":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"647":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"650":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Code128::setText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Code128::setText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"661":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Code128::getText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"670":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"669":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"672":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Code128::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Code128::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":644,"81-120":13}},"Line indent":{"values":{"spaces":639}},"PHP keyword case":{"values":{"lower":75}},"Multiple statements on same line":{"values":{"no":64}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":179}},"PHP constant case":{"values":{"lower":5}},"Short array syntax used":{"values":{"yes":10}},"Array end comma":{"values":{"no":5,"yes":5}},"CamelCase method name":{"values":{"yes":8}},"Function opening brace placement":{"values":{"new line":8}},"Function has doc comment":{"values":{"yes":8}},"Spacing before object operator":{"values":[35]},"Spacing after object operator":{"values":[35]},"Inline comment style":{"values":{"\/\/ ...":6}},"Adjacent assignments aligned":{"values":{"yes":5}},"Space before operator":{"values":{"1":26}},"Spaces after control structure open parenthesis":{"values":{"0":16,"newline":3}},"Spaces before control structure close parenthesis":{"values":[19]},"Blank lines at start of control structure":{"values":[23]},"Blank lines at end of control structure":{"values":[23]},"Control structure defined inline":{"values":{"no":23}},"Spacing between in\/decrementor and variable":{"values":[5]},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}},"Use of ELSE IF or ELSEIF":{"values":{"elseif":2}}},"errorCount":32,"warningCount":0,"fixableCount":23,"numTokens":3964},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Code25.php":{"hash":"ba887d53a2da333f00219975b7ba247633206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"39":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"41":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"57":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"67":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"65":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Code25::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"103":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"102":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"105":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Code25::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Code25::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":101,"81-120":5}},"Line indent":{"values":{"spaces":94}},"PHP keyword case":{"values":{"lower":24}},"Multiple statements on same line":{"values":{"no":37}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":67}},"Short array syntax used":{"values":{"yes":15}},"Array end comma":{"values":{"yes":1,"no":14}},"CamelCase method name":{"values":{"yes":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"yes":4}},"Adjacent assignments aligned":{"values":{"yes":6}},"Spacing before object operator":{"values":[30]},"Spacing after object operator":{"values":[30]},"Space before operator":{"values":{"1":27,"newline":1}},"Inline comment style":{"values":{"\/\/ ...":2,"\/* ... *\/":1}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"Spacing between in\/decrementor and variable":{"values":[1]}},"errorCount":11,"warningCount":0,"fixableCount":8,"numTokens":1028},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Code25interleaved.php":{"hash":"e9eba76cce9c68385ef21790c4b380ac33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"27":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25interleaved::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"35":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"38":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Code25interleaved::setWithBearerBars() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Code25interleaved::setWithBearerBars() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"47":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"49":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25interleaved::getWithBearerBars() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"57":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"59":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25interleaved::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"74":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25interleaved::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"72":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Code25interleaved::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"123":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code25interleaved::postDrawBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":141,"81-120":4}},"Line indent":{"values":{"spaces":134}},"PHP keyword case":{"values":{"lower":28}},"Multiple statements on same line":{"values":{"no":42}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":77}},"PHP constant case":{"values":{"lower":2}},"CamelCase method name":{"values":{"yes":6}},"Function opening brace placement":{"values":{"new line":6}},"Function has doc comment":{"values":{"yes":6}},"Spacing before object operator":{"values":[54]},"Spacing after object operator":{"values":[54]},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}},"Adjacent assignments aligned":{"values":{"yes":7}},"Space before operator":{"values":{"1":36,"newline":4}},"Spaces after control structure open parenthesis":{"values":[4]},"Spaces before control structure close parenthesis":{"values":[4]},"Blank lines at start of control structure":{"values":[4]},"Blank lines at end of control structure":{"values":[4]},"Control structure defined inline":{"values":{"no":4}},"Short array syntax used":{"values":{"yes":12}},"Array end comma":{"values":{"no":10,"yes":2}},"Inline comment style":{"values":{"\/\/ ...":7}},"Spacing between in\/decrementor and variable":{"values":[1]}},"errorCount":14,"warningCount":0,"fixableCount":11,"numTokens":1290},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Code39.php":{"hash":"e9fd3e4963b7bedc622ee92543e5fc9533206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"76":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code39::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"84":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"86":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code39::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"97":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"100":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Code39::setText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Code39::setText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"111":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Code39::getText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"121":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Code39::getTextToDisplay() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"136":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Code39::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"134":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Code39::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"150":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"148":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"158":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"157":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"160":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Code39::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Code39::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"168":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":156,"81-120":3}},"Line indent":{"values":{"spaces":144}},"PHP keyword case":{"values":{"lower":41}},"Multiple statements on same line":{"values":{"no":35}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":76}},"Short array syntax used":{"values":{"yes":4}},"Array end comma":{"values":{"yes":1,"no":3}},"CamelCase method name":{"values":{"yes":7}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":7}},"Spacing before object operator":{"values":[17]},"Spacing after object operator":{"values":[17]},"Adjacent assignments aligned":{"values":{"yes":5}},"Space before operator":{"values":{"1":14}},"Spacing before string concat":{"values":{"1":4}},"Spacing after string concat":{"values":{"1":4}},"Spaces after control structure open parenthesis":{"values":[4]},"Spaces before control structure close parenthesis":{"values":[4]},"Blank lines at start of control structure":{"values":[4]},"Blank lines at end of control structure":{"values":[4]},"Control structure defined inline":{"values":{"no":4}},"PHP constant case":{"values":{"lower":1}},"Inline comment style":{"values":{"\/* ... *\/":1}},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":20,"warningCount":0,"fixableCount":15,"numTokens":1195},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Ean13.php":{"hash":"2737fad60997f13d193e76015834eb7733206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"81":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"91":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"93":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"117":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"115":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Ean13::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"164":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"163":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"166":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"187":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::drawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"196":{"15":[{"message":"Missing doc comment for function drawEan13Text()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Ean13::drawEan13Text() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"224":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":204,"81-120":4}},"Line indent":{"values":{"spaces":196}},"PHP keyword case":{"values":{"lower":46}},"Multiple statements on same line":{"values":{"no":51}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":129}},"Short array syntax used":{"values":{"yes":29}},"Array end comma":{"values":{"yes":5,"no":24}},"CamelCase method name":{"values":{"yes":7}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":6,"no":1}},"Spacing before object operator":{"values":[54]},"Spacing after object operator":{"values":[54]},"Adjacent assignments aligned":{"values":{"yes":10}},"PHP constant case":{"values":{"lower":2}},"Space before operator":{"values":{"1":41}},"Inline comment style":{"values":{"\/\/ ...":5}},"Spaces after control structure open parenthesis":{"values":[9]},"Spaces before control structure close parenthesis":{"values":[9]},"Blank lines at start of control structure":{"values":[10]},"Blank lines at end of control structure":{"values":[10]},"Control structure defined inline":{"values":{"no":10}},"Spacing between in\/decrementor and variable":{"values":[4]},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":16,"warningCount":0,"fixableCount":12,"numTokens":2025},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Ean2.php":{"hash":"c6f8a406385c179a3d3352e53c93c23933206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"25":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean2::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"34":{"15":[{"message":"Type hint \"int\" missing for $i","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Ean2::getParity() does not have native type hint for its parameter $i but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Ean2::getParity() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":34}},"Line indent":{"values":{"spaces":25}},"PHP keyword case":{"values":{"lower":10}},"Multiple statements on same line":{"values":{"no":6}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":8}},"Short array syntax used":{"values":{"yes":5}},"Array end comma":{"values":{"yes":1,"no":4}},"CamelCase method name":{"values":{"yes":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Spacing before object operator":{"values":[3]},"Spacing after object operator":{"values":[3]},"Space before operator":{"values":{"1":1}}},"errorCount":7,"warningCount":0,"fixableCount":5,"numTokens":230},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Ean5.php":{"hash":"9a51efc9650e4681e494aa17cefcf76233206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"33":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"41":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"43":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"63":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"61":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Ean5::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"85":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"99":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"98":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"101":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"116":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"119":{"15":[{"message":"Type hint \"int\" missing for $i","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::getParity() does not have native type hint for its parameter $i but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::getParity() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"130":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::getText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"138":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean5::getTextToDisplay() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":123,"81-120":1}},"Line indent":{"values":{"spaces":114}},"PHP keyword case":{"values":{"lower":32}},"Multiple statements on same line":{"values":{"no":31}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":55}},"Short array syntax used":{"values":{"yes":20}},"Array end comma":{"values":{"yes":1,"no":19}},"CamelCase method name":{"values":{"yes":7}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":7}},"Spacing before object operator":{"values":[31]},"Spacing after object operator":{"values":[31]},"Adjacent assignments aligned":{"values":{"yes":4}},"Space before operator":{"values":{"1":14,"newline":6}},"Inline comment style":{"values":{"\/\/ ...":3}},"PHP constant case":{"values":{"lower":3}},"Spaces after control structure open parenthesis":{"values":[4]},"Spaces before control structure close parenthesis":{"values":[4]},"Blank lines at start of control structure":{"values":[5]},"Blank lines at end of control structure":{"values":[5]},"Control structure defined inline":{"values":{"no":5}},"Spacing between in\/decrementor and variable":{"values":[2]},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":19,"warningCount":0,"fixableCount":14,"numTokens":1176},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Ean8.php":{"hash":"8beb99490aa82d61723961962b7f774533206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"22":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean8::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"33":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean8::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"48":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean8::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"46":{"12":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Ean8::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"95":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Ean8::drawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"120":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"133":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"132":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"130":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"131":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\Ean8::validateSpecificText() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"134":{"15":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $options","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Ean8::validateSpecificText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Ean8::validateSpecificText() does not have native type hint for its parameter $options but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Ean8::validateSpecificText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":127,"81-120":4}},"Line indent":{"values":{"spaces":119}},"PHP keyword case":{"values":{"lower":36}},"Multiple statements on same line":{"values":{"no":41}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":5}},"Function opening brace placement":{"values":{"new line":5}},"Function has doc comment":{"values":{"yes":5}},"Spacing before object operator":{"values":[52]},"Spacing after object operator":{"values":[52]},"Adjacent assignments aligned":{"values":{"yes":7}},"Space after operator":{"values":{"1":73}},"PHP constant case":{"values":{"lower":3}},"Space before operator":{"values":{"1":34}},"Short array syntax used":{"values":{"yes":16}},"Array end comma":{"values":{"no":15,"yes":1}},"Inline comment style":{"values":{"\/\/ ...":5}},"Spaces after control structure open parenthesis":{"values":[8]},"Spaces before control structure close parenthesis":{"values":[8]},"Blank lines at start of control structure":{"values":[8]},"Blank lines at end of control structure":{"values":[8]},"Control structure defined inline":{"values":{"no":8}},"Spacing between in\/decrementor and variable":{"values":[3]},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":18,"warningCount":0,"fixableCount":10,"numTokens":1307},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Error.php":{"hash":"7c2acb8466ece70519ba31ecebc5841733206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"16":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"15":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"18":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Error::validateText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Error::validateText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"27":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"26":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"29":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Error::getHeight() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Error::getHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"38":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"37":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"40":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Error::getWidth() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Error::getWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"51":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Error::draw() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"49":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Error::draw() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"64":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Error::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"73":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Error::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"82":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Error::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":76}},"Line indent":{"values":{"spaces":67}},"PHP keyword case":{"values":{"lower":22}},"Multiple statements on same line":{"values":{"no":9}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":7}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":7}},"PHP constant case":{"values":{"lower":3}},"Spacing before object operator":{"values":[7]},"Spacing after object operator":{"values":[7]},"Space after operator":{"values":{"1":1}},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}}},"errorCount":23,"warningCount":0,"fixableCount":16,"numTokens":439},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Exception\\BarcodeValidationException.php":{"hash":"12c6b4f0d55b5033e4d12e1469ce202533206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":45},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Exception\\ExceptionInterface.php":{"hash":"ed98cb5b1a3ef140dc36bc8fcad5cee133206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":61},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Exception\\ExtensionNotLoadedException.php":{"hash":"65a702ae6acbcfc79382ad516345996233206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":45},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Exception\\InvalidArgumentException.php":{"hash":"1fa9be5fcb5ff01757eac2f5b575683b33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10,"81-120":1}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":62},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Exception\\OutOfRangeException.php":{"hash":"6dbbbb1a2f4982aa894c84681ebc45a233206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":11}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":62},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Exception\\RuntimeException.php":{"hash":"8449ee04fef2e57d90d2b79e5977373633206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":11}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":62},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Identcode.php":{"hash":"961ac8954241e3a08cbab2570942f19933206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"20":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Identcode::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Identcode::getTextToDisplay() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"43":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"42":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"41":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"44":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Identcode::validateText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Identcode::validateText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"52":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"55":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Identcode::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Identcode::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":57,"81-120":1}},"Line indent":{"values":{"spaces":47}},"PHP keyword case":{"values":{"lower":17}},"Multiple statements on same line":{"values":{"no":14}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"yes":4}},"Spacing before object operator":{"values":[9]},"Spacing after object operator":{"values":[9]},"Adjacent assignments aligned":{"values":{"yes":1}},"Space after operator":{"values":{"1":17}},"PHP constant case":{"values":{"lower":2}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"Spaces after control structure open parenthesis":{"values":[1]},"Spaces before control structure close parenthesis":{"values":[1]},"Blank lines at start of control structure":{"values":[1]},"Blank lines at end of control structure":{"values":[1]},"Control structure defined inline":{"values":{"no":1}},"Space before operator":{"values":{"1":9}},"Spacing between in\/decrementor and variable":{"values":[1]},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":14,"warningCount":0,"fixableCount":8,"numTokens":426},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Itf14.php":{"hash":"aeb53580428eb8fbd0a2ab1db1b9825033206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"17":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Itf14::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":19}},"Line indent":{"values":{"spaces":10}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Adjacent assignments aligned":{"values":{"yes":1}},"Space after operator":{"values":{"1":2}},"PHP constant case":{"values":{"lower":1}}},"errorCount":2,"warningCount":0,"fixableCount":2,"numTokens":99},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Leitcode.php":{"hash":"450bc79fa1936d46c5c5004fb7075d9f33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"19":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Leitcode::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"30":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Leitcode::getTextToDisplay() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":29,"81-120":1}},"Line indent":{"values":{"spaces":20}},"PHP keyword case":{"values":{"lower":10}},"Multiple statements on same line":{"values":{"no":7}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Spacing before object operator":{"values":[5]},"Spacing after object operator":{"values":[5]},"Adjacent assignments aligned":{"values":{"yes":1}},"Space after operator":{"values":{"1":2}},"PHP constant case":{"values":{"lower":1}}},"errorCount":3,"warningCount":0,"fixableCount":3,"numTokens":175},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\ObjectInterface.php":{"hash":"383ece7ab85d60d56b5d2952947ec6c733206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"17":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\ObjectInterface::__construct() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"24":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\ObjectInterface::setOptions() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"27":{"12":[{"message":"Type hint \"array\" missing for $options","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setOptions() does not have native type hint for its parameter $options but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"32":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"35":{"12":[{"message":"Type hint \"string\" missing for $namespace","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarcodeNamespace() does not have native type hint for its parameter $namespace but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarcodeNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"42":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getBarcodeNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"49":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getType() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"54":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"57":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarHeight() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"62":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"64":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getBarHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"72":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarThinWidth() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarThinWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"77":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"79":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getBarThinWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"84":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"87":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarThickWidth() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBarThickWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"94":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getBarThickWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"103":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setFactor() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setFactor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"109":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"111":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getFactor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"116":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"119":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setForeColor() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setForeColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"124":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"126":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getForeColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"131":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"134":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBackgroundColor() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setBackgroundColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"139":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"141":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getBackgroundColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"146":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setWithBorder() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setWithBorder() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"154":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"156":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getWithBorder() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"163":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setReverseColor() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"168":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"171":{"12":[{"message":"Type hint \"float\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setOrientation() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setOrientation() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"178":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getOrientation() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"183":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"186":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"193":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"200":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getRawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"207":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getTextToDisplay() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"212":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"215":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setDrawText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setDrawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"220":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"222":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getDrawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"228":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"231":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setStretchText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setStretchText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"237":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"239":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getStretchText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"246":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"249":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setWithChecksum() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setWithChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"255":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"257":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getWithChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"264":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"267":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setWithChecksumInText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setWithChecksumInText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"273":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"275":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getWithChecksumInText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"282":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer|string\" but found \"int|string\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"285":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setFont() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"290":{"8":[{"message":"Expected \"integer|string\" but found \"int|string\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"297":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"300":{"12":[{"message":"Type hint \"float\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setFontSize() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::setFontSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"307":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getFontSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"313":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"315":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getQuietZone() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"322":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getInstructions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"320":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\ObjectInterface::getInstructions() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"329":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::checkParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"335":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"334":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"337":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getHeight() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"343":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"342":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"345":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getWidth() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"351":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"354":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getOffsetLeft() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getOffsetLeft() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"360":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"363":{"12":[{"message":"Type hint \"bool\" missing for $recalculate","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getOffsetTop() does not have native type hint for its parameter $recalculate but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::getOffsetTop() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"370":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::draw() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"368":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\ObjectInterface::draw() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"378":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::validateText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\ObjectInterface::validateText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"375":{"8":[{"message":"Expected 1 spaces after parameter name; 4 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":329}},"Line indent":{"values":{"spaces":319}},"PHP keyword case":{"values":{"lower":98}},"Multiple statements on same line":{"values":{"no":50}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP constant case":{"values":{"lower":5}},"Function has doc comment":{"values":{"yes":47}},"CamelCase method name":{"values":{"yes":46}}},"errorCount":146,"warningCount":0,"fixableCount":98,"numTokens":1820},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Planet.php":{"hash":"fdf58f83a80c0522b334448be07420c633206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":28}},"Line indent":{"values":{"spaces":19}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":11}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"yes":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":167},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Postnet.php":{"hash":"288219a774c0e0c449b7cd691237a1f033206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"41":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Postnet::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"55":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Postnet::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Postnet::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Postnet::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"76":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Postnet::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"105":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"104":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"107":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Postnet::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Postnet::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":99,"81-120":2}},"Line indent":{"values":{"spaces":89}},"PHP keyword case":{"values":{"lower":25}},"Multiple statements on same line":{"values":{"no":28}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":45}},"Short array syntax used":{"values":{"yes":7}},"Array end comma":{"values":{"yes":1,"no":6}},"CamelCase method name":{"values":{"yes":5}},"Function opening brace placement":{"values":{"new line":5}},"Function has doc comment":{"values":{"yes":5}},"Spacing before object operator":{"values":[21]},"Spacing after object operator":{"values":[21]},"Adjacent assignments aligned":{"values":{"yes":4}},"PHP constant case":{"values":{"lower":3}},"Space before operator":{"values":{"1":16}},"Inline comment style":{"values":{"\/\/ ...":3}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}}},"errorCount":12,"warningCount":0,"fixableCount":9,"numTokens":798},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Royalmail.php":{"hash":"a2f051d236384f70e2101c7cac20910333206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"151":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Royalmail::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"163":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"165":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Royalmail::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"179":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Royalmail::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"188":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Royalmail::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"186":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Royalmail::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"215":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"214":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"217":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Royalmail::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Royalmail::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":216,"81-120":3}},"Line indent":{"values":{"spaces":205}},"PHP keyword case":{"values":{"lower":31}},"Multiple statements on same line":{"values":{"no":40}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":157}},"Short array syntax used":{"values":{"yes":9}},"Array end comma":{"values":{"yes":3,"no":6}},"CamelCase method name":{"values":{"yes":5}},"Function opening brace placement":{"values":{"new line":5}},"Function has doc comment":{"values":{"yes":5}},"Spacing before object operator":{"values":[25]},"Spacing after object operator":{"values":[25]},"Adjacent assignments aligned":{"values":{"yes":8}},"PHP constant case":{"values":{"lower":3}},"Space before operator":{"values":{"1":20}},"Inline comment style":{"values":{"\/\/ ...":3}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}}},"errorCount":12,"warningCount":0,"fixableCount":9,"numTokens":1776},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Upca.php":{"hash":"23742fcfd6200e26c6af38448d3e171033206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"19":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upca::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"29":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"31":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upca::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"46":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upca::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Upca::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"105":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upca::drawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"115":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"140":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":127,"81-120":3}},"Line indent":{"values":{"spaces":120}},"PHP keyword case":{"values":{"lower":36}},"Multiple statements on same line":{"values":{"no":46}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"yes":4}},"Spacing before object operator":{"values":[51]},"Spacing after object operator":{"values":[51]},"Adjacent assignments aligned":{"values":{"yes":7}},"Space after operator":{"values":{"1":77}},"PHP constant case":{"values":{"lower":2}},"Space before operator":{"values":{"1":34}},"Short array syntax used":{"values":{"yes":16}},"Array end comma":{"values":{"no":16}},"Inline comment style":{"values":{"\/\/ ...":7}},"Spaces after control structure open parenthesis":{"values":[10]},"Spaces before control structure close parenthesis":{"values":[10]},"Blank lines at start of control structure":{"values":[10]},"Blank lines at end of control structure":{"values":[10]},"Control structure defined inline":{"values":{"no":10}},"Spacing between in\/decrementor and variable":{"values":[3]},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":9,"warningCount":0,"fixableCount":8,"numTokens":1319},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Object\\Upce.php":{"hash":"187de19c1a52cb6fb2b7a0f0c7ea0ce933206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"50":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upce::getDefaultOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"62":{"12":[{"message":"Method \\Laminas\\Barcode\\Object\\Upce::getText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"67":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"74":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"76":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upce::calculateBarcodeWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"90":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upce::prepareBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"88":{"8":[{"message":"@return annotation of method \\Laminas\\Barcode\\Object\\Upce::prepareBarcode() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"104":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"130":{"15":[{"message":"Method \\Laminas\\Barcode\\Object\\Upce::drawText() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"140":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"162":{"17":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"175":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"174":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"172":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"173":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Object\\Upce::validateSpecificText() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"176":{"15":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $options","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Upce::validateSpecificText() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Upce::validateSpecificText() does not have native type hint for its parameter $options but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Upce::validateSpecificText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"195":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"194":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"197":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Object\\Upce::getChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Object\\Upce::getChecksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"202":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":183,"81-120":4}},"Line indent":{"values":{"spaces":175}},"PHP keyword case":{"values":{"lower":48}},"Multiple statements on same line":{"values":{"no":53}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":102}},"Short array syntax used":{"values":{"yes":36}},"Array end comma":{"values":{"yes":4,"no":32}},"CamelCase method name":{"values":{"yes":7}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":7}},"Spacing before object operator":{"values":[48]},"Spacing after object operator":{"values":[48]},"Adjacent assignments aligned":{"values":{"yes":8}},"PHP constant case":{"values":{"lower":5}},"Spaces after control structure open parenthesis":{"values":[10]},"Spaces before control structure close parenthesis":{"values":[10]},"Blank lines at start of control structure":{"values":[10]},"Blank lines at end of control structure":{"values":[10]},"Control structure defined inline":{"values":{"no":10}},"Space before operator":{"values":{"1":34}},"PHP type case":{"values":{"lower":4}},"Spacing after cast statement":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":2}},"Spacing between in\/decrementor and variable":{"values":[2]}},"errorCount":28,"warningCount":0,"fixableCount":18,"numTokens":1997},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\ObjectPluginManager.php":{"hash":"3e93bc8df36fe0cb2b5df150e3d6c31833206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"55":{"28":[{"message":"Expected 12 spaces before double arrow; 11 found","source":"WebimpressCodingStandard.Arrays.DoubleArrow.SpacesBefore","listener":"WebimpressCodingStandard\\Sniffs\\Arrays\\DoubleArrowSniff","severity":5,"fixable":true}]},"76":{"48":[{"message":"Expected 12 spaces before double arrow; 11 found","source":"WebimpressCodingStandard.Arrays.DoubleArrow.SpacesBefore","listener":"WebimpressCodingStandard\\Sniffs\\Arrays\\DoubleArrowSniff","severity":5,"fixable":true}]},"97":{"45":[{"message":"Expected 12 spaces before double arrow; 11 found","source":"WebimpressCodingStandard.Arrays.DoubleArrow.SpacesBefore","listener":"WebimpressCodingStandard\\Sniffs\\Arrays\\DoubleArrowSniff","severity":5,"fixable":true}]},"147":{"23":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"5":[{"message":"Doc comment for parameter \"$plugin\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"167":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"166":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"165":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"168":{"12":[{"message":"Method \\Laminas\\Barcode\\ObjectPluginManager::validatePlugin() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":165,"81-120":1}},"Line indent":{"values":{"spaces":146}},"PHP keyword case":{"values":{"lower":29}},"Multiple statements on same line":{"values":{"no":17}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":105}},"PHP constant case":{"values":{"lower":2}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"yes":2}},"Spacing before object operator":{"values":[121]},"Spacing after object operator":{"values":[121]},"Inline comment style":{"values":{"\/\/ ...":3}},"CamelCase method name":{"values":{"yes":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":1}},"Space before operator":{"values":{"1":5}}},"errorCount":10,"warningCount":0,"fixableCount":5,"numTokens":1616},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\AbstractRenderer.php":{"hash":"8ffbe08e130d8cee885561ba57da035533206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"109":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::__construct() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"115":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"118":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"130":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setOptions() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"133":{"12":[{"message":"Type hint \"array\" missing for $options","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setOptions() does not have native type hint for its parameter $options but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"140":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"147":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"150":{"12":[{"message":"Type hint \"string\" missing for $namespace","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setRendererNamespace() does not have native type hint for its parameter $namespace but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setRendererNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"161":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getRendererNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"170":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"173":{"12":[{"message":"Type hint \"bool\" missing for $bool","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setTransparentBackground() does not have native type hint for its parameter $bool but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setTransparentBackground() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"181":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"183":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getTransparentBackground() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"193":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getType() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"203":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"201":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"205":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setTopOffset() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setTopOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"211":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"219":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"221":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getTopOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"231":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"229":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"233":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setLeftOffset() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setLeftOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"239":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"247":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"249":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getLeftOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"257":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"260":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setAutomaticRenderError() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setAutomaticRenderError() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"271":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"269":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"273":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setHorizontalPosition() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setHorizontalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"279":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"289":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getHorizontalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"299":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"297":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"301":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setVerticalPosition() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setVerticalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"307":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"317":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getVerticalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"327":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"325":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"329":{"12":[{"message":"Type hint \"float\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setModuleSize() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setModuleSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"335":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"345":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getModuleSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"353":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"355":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getAutomaticRenderError() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"360":{"5":[{"message":"Doc comment for parameter \"$barcode\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"365":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::setBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"376":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::getBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"ObjectInterface\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"384":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"386":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::checkParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"397":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"399":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::checkBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"412":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"413":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"416":{"15":[{"message":"Type hint \"float\" missing for $supportHeight","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $supportWidth","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::adjustPosition() does not have native type hint for its parameter $supportHeight but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::adjustPosition() does not have native type hint for its parameter $supportWidth but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::adjustPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"433":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"456":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"458":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::draw() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractRenderer\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"477":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"484":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"485":{"13":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawInstructionList() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"521":{"24":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"528":{"24":[{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::initRenderer() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"536":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"533":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawPolygon() does not specify type hint for items of its traversable parameter $points.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"534":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 3 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"535":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"537":{"24":[{"message":"Type hint \"array\" missing for $points","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"bool\" missing for $filled","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawPolygon() does not have native type hint for its parameter $points but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawPolygon() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawPolygon() does not have native type hint for its parameter $filled but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawPolygon() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"549":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"542":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"543":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 5 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"544":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 5 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not specify type hint for items of its traversable parameter $position.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"545":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"546":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 7 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"547":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"548":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"float|integer\" but found \"float|int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"550":{"24":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $size","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $position","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $font","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $alignment","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not have native type hint for its parameter $size but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not have native type hint for its parameter $position but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not have native type hint for its parameter $font but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not have native type hint for its parameter $alignment but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\AbstractRenderer::drawText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":505,"81-120":6}},"Line indent":{"values":{"spaces":489}},"PHP keyword case":{"values":{"lower":177}},"Multiple statements on same line":{"values":{"no":105}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":52}},"PHP constant case":{"values":{"lower":9}},"Function opening brace placement":{"values":{"new line":26}},"Function has doc comment":{"values":{"yes":30}},"Spaces after control structure open parenthesis":{"values":[18]},"Spaces before control structure close parenthesis":{"values":[18]},"Blank lines at start of control structure":{"values":[20]},"Blank lines at end of control structure":{"values":[20]},"Control structure defined inline":{"values":{"no":18}},"Space before operator":{"values":{"1":19}},"Spacing before object operator":{"values":[59]},"Spacing after object operator":{"values":[59]},"CamelCase method name":{"values":{"yes":29}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":138,"warningCount":0,"fixableCount":81,"numTokens":3147},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Exception\\ExceptionInterface.php":{"hash":"7bd51965e31ac5ce558d841deecb6f8533206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":7}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":51},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Exception\\InvalidArgumentException.php":{"hash":"d778be880ab66a912775a739bf1fd76733206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10,"81-120":1}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":62},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Exception\\OutOfRangeException.php":{"hash":"c66e2c1c30d27de6b7c2d2c717463b2533206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":11}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":62},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Exception\\RuntimeException.php":{"hash":"0b5f154c9dad9007ce1b11c3a569d63b33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":11}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":62},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Exception\\UnexpectedValueException.php":{"hash":"98ff5a5d145b2fb6c5de12d68b31109b33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10,"81-120":1}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":62},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Image.php":{"hash":"4ce49a31c837c5b2126693535f00a3fd33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"52":{"8":[{"message":"@var annotation of property \\Laminas\\Barcode\\Renderer\\Image::$allowedImageType does not specify type hint for its items.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":false}]},"106":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"105":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Image::__construct() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"122":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"120":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"null|integer\" but found \"null|int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"124":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::setHeight() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"null|int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::setHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"130":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"139":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"141":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::getHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"151":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"149":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"153":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::setWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"159":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"168":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"170":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::getWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"180":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"178":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"182":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::setResource() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"188":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"199":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"197":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"201":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::setImageType() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::setImageType() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"226":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::getImageType() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"236":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::initRenderer() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"246":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"301":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"310":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"312":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::checkDimensions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"333":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"379":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"376":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Image::drawPolygon() does not specify type hint for items of its traversable parameter $points.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"377":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 3 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"378":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"380":{"15":[{"message":"Type hint \"array\" missing for $points","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"bool\" missing for $filled","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawPolygon() does not have native type hint for its parameter $points but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawPolygon() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawPolygon() does not have native type hint for its parameter $filled but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawPolygon() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"414":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"413":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"406":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"407":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 5 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"408":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 5 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not specify type hint for items of its traversable parameter $position.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"409":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"410":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 7 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"411":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"412":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"float|integer\" but found \"float|int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"415":{"15":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $size","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $position","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $font","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $alignment","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not have native type hint for its parameter $size but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not have native type hint for its parameter $position but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not have native type hint for its parameter $font but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not have native type hint for its parameter $alignment but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::drawText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"426":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"442":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"456":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"476":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"496":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"491":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"492":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 12 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Image::imageFilledPolygonWrapper() does not specify type hint for items of its traversable parameter $points.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"493":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 14 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"494":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 14 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"495":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 13 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"498":{"15":[{"message":"Type hint \"int\" missing for $numPoints","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"bool\" missing for $filled","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::imageFilledPolygonWrapper() does not have native type hint for its parameter $numPoints but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::imageFilledPolygonWrapper() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::imageFilledPolygonWrapper() does not have native type hint for its parameter $filled but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Image::imageFilledPolygonWrapper() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"513":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"512":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":454,"81-120":15}},"Line indent":{"values":{"spaces":426}},"PHP keyword case":{"values":{"lower":156}},"Multiple statements on same line":{"values":{"no":125}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":113}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"yes":2}},"PHP constant case":{"values":{"lower":12}},"Function opening brace placement":{"values":{"new line":16}},"Function has doc comment":{"values":{"yes":16}},"Spaces after control structure open parenthesis":{"values":[27]},"Spaces before control structure close parenthesis":{"values":[27]},"Blank lines at start of control structure":{"values":[30]},"Blank lines at end of control structure":{"values":[30]},"Control structure defined inline":{"values":{"no":30}},"Spacing before object operator":{"values":[91]},"Spacing after object operator":{"values":[91]},"Spacing before string concat":{"values":{"1":3}},"Spacing after string concat":{"values":{"1":3}},"CamelCase method name":{"values":{"yes":15}},"Space before operator":{"values":{"1":71}},"Adjacent assignments aligned":{"values":{"yes":7}},"Inline comment style":{"values":{"\/\/ ...":4}},"PHP type case":{"values":{"lower":12}},"Spacing after cast statement":{"values":{"1":10}}},"errorCount":109,"warningCount":0,"fixableCount":60,"numTokens":3533},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Pdf.php":{"hash":"82e26d355ce45e592f1b90039eb1f0d433206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"56":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Doc comment for parameter $page does not match actual variable name $pdf","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"59":{"12":[{"message":"Expected type hint \"int\"; found \"PdfDocument\" for $page","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::setResource() does not have native type hint for its parameter $page but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::setResource() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"5":[{"message":"Doc comment for parameter \"$pdf\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"69":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"78":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"99":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::initRenderer() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"118":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"115":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Pdf::drawPolygon() does not specify type hint for items of its traversable parameter $points.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"116":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 3 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"117":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"119":{"15":[{"message":"Type hint \"array\" missing for $points","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"bool\" missing for $filled","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawPolygon() does not have native type hint for its parameter $points but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawPolygon() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawPolygon() does not have native type hint for its parameter $filled but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawPolygon() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"127":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"132":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"166":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"159":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 1 spaces after parameter type; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"160":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 3 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"161":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 3 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not specify type hint for items of its traversable parameter $position.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"162":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 1 spaces after parameter type; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"163":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 4 spaces after parameter type; 5 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"164":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 1 spaces after parameter type; 2 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"165":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 3 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"167":{"15":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $size","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $position","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $font","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $alignment","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $orientation","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have native type hint for its parameter $size but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have native type hint for its parameter $position but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have native type hint for its parameter $font but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have native type hint for its parameter $alignment but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have native type hint for its parameter $orientation but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::drawText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"205":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"215":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"216":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 3 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"217":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"220":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"Font\" missing for $font","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $fontSize","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::widthForStringUsingFontSize() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::widthForStringUsingFontSize() does not have native type hint for its parameter $font but it should be possible to add it based on @param annotation \"Font\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::widthForStringUsingFontSize() does not have native type hint for its parameter $fontSize but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Pdf::widthForStringUsingFontSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"226":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":203,"81-120":4}},"Line indent":{"values":{"spaces":180}},"PHP keyword case":{"values":{"lower":56}},"Multiple statements on same line":{"values":{"no":68}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":88}},"CamelCase method name":{"values":{"yes":7}},"Function opening brace placement":{"values":{"new line":6}},"Function has doc comment":{"values":{"yes":7}},"Spacing before object operator":{"values":[63]},"Spacing after object operator":{"values":[63]},"Adjacent assignments aligned":{"values":{"yes":12}},"Spaces after control structure open parenthesis":{"values":[8]},"Spaces before control structure close parenthesis":{"values":[8]},"Blank lines at start of control structure":{"values":[8]},"Blank lines at end of control structure":{"values":[8]},"Control structure defined inline":{"values":{"no":8}},"Space before operator":{"values":{"1":50,"newline":2}},"PHP constant case":{"values":{"lower":2}},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"Spacing between in\/decrementor and variable":{"values":[2]}},"errorCount":75,"warningCount":0,"fixableCount":41,"numTokens":1798},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\RendererInterface.php":{"hash":"13fd035f654e64fe826cad3fede022d033206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\RendererInterface::__construct() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"25":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\RendererInterface::setOptions() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"28":{"12":[{"message":"Type hint \"array\" missing for $options","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setOptions() does not have native type hint for its parameter $options but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setOptions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"33":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"36":{"12":[{"message":"Type hint \"string\" missing for $namespace","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setRendererNamespace() does not have native type hint for its parameter $namespace but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setRendererNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"43":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getRendererNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"50":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getType() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"55":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"58":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setTopOffset() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setTopOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"63":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"65":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getTopOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"70":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"73":{"12":[{"message":"Type hint \"int\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setLeftOffset() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setLeftOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"80":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getLeftOffset() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"85":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"88":{"12":[{"message":"Type hint \"bool\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setAutomaticRenderError() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setAutomaticRenderError() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"93":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"96":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setHorizontalPosition() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setHorizontalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"103":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getHorizontalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"111":{"12":[{"message":"Type hint \"string\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setVerticalPosition() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setVerticalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"118":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getVerticalPosition() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"123":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"126":{"12":[{"message":"Type hint \"float\" missing for $value","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setModuleSize() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setModuleSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"133":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getModuleSize() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"138":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"140":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getAutomaticRenderError() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"142":{"5":[{"message":"Doc comment for parameter \"$barcode\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"147":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::setBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"154":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::getBarcode() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"ObjectInterface\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"159":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"161":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\RendererInterface::checkParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":151}},"Line indent":{"values":{"spaces":140}},"PHP keyword case":{"values":{"lower":49}},"Multiple statements on same line":{"values":{"no":26}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP constant case":{"values":{"lower":1}},"Function has doc comment":{"values":{"yes":22}},"CamelCase method name":{"values":{"yes":21}}},"errorCount":55,"warningCount":0,"fixableCount":35,"numTokens":831},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\Renderer\\Svg.php":{"hash":"588eaa2a33cba631c3d5ce0d0dd0942f33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"65":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"64":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"null|integer\" but found \"null|int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"68":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::setHeight() does not have native type hint for its parameter $value but it should be possible to add it based on @param annotation \"null|int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::setHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"74":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"82":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"84":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::getHeight() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"93":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"92":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"96":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::setWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"102":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"110":{"8":[{"message":"Expected \"integer\" but found \"int\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"112":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::getWidth() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"117":{"5":[{"message":"Doc comment for parameter \"$svg\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"122":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::setResource() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"self\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"133":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::initRenderer() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"152":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"171":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"189":{"15":[{"message":"Missing doc comment for function readRootElement()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::readRootElement() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"202":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"199":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"200":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Svg::appendRootElement() does not specify type hint for items of its traversable parameter $attributes.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"201":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"203":{"15":[{"message":"Type hint \"string\" missing for $tagName","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $attributes","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $textContent","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::appendRootElement() does not have native type hint for its parameter $tagName but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::appendRootElement() does not have native type hint for its parameter $attributes but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::appendRootElement() does not have native type hint for its parameter $textContent but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::appendRootElement() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"212":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"213":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Svg::createElement() does not specify type hint for items of its traversable parameter $attributes.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"214":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"217":{"15":[{"message":"Type hint \"string\" missing for $tagName","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $attributes","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $textContent","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::createElement() does not have native type hint for its parameter $tagName but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::createElement() does not have native type hint for its parameter $attributes but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::createElement() does not have native type hint for its parameter $textContent but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::createElement() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"DOMElement\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"222":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"225":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"234":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::checkSpecificParams() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"242":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"245":{"15":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::checkDimensions() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"void\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"266":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"294":{"12":[{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::draw() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"DOMDocument\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"319":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"316":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Svg::drawPolygon() does not specify type hint for items of its traversable parameter $points.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"317":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 3 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"318":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"320":{"15":[{"message":"Type hint \"array\" missing for $points","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"bool\" missing for $filled","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawPolygon() does not have native type hint for its parameter $points but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawPolygon() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawPolygon() does not have native type hint for its parameter $filled but it should be possible to add it based on @param annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawPolygon() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"348":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"365":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"358":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"359":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"360":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"@param annotation of method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not specify type hint for items of its traversable parameter $position.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"361":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"362":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"363":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"364":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected 2 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"366":{"15":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $size","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"array\" missing for $position","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $font","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $color","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $alignment","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"float\" missing for $orientation","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have native type hint for its parameter $size but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have native type hint for its parameter $position but it should be possible to add it based on @param annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have native type hint for its parameter $font but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have native type hint for its parameter $color but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have native type hint for its parameter $alignment but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have native type hint for its parameter $orientation but it should be possible to add it based on @param annotation \"float\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Laminas\\Barcode\\Renderer\\Svg::drawText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"389":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":358,"81-120":9}},"Line indent":{"values":{"spaces":346}},"PHP keyword case":{"values":{"lower":104}},"Multiple statements on same line":{"values":{"no":100}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":111}},"PHP constant case":{"values":{"lower":17}},"CamelCase method name":{"values":{"yes":15}},"Function opening brace placement":{"values":{"new line":15}},"Function has doc comment":{"values":{"yes":14,"no":1}},"Spaces after control structure open parenthesis":{"values":[20]},"Spaces before control structure close parenthesis":{"values":[20]},"Blank lines at start of control structure":{"values":[23]},"Blank lines at end of control structure":{"values":[23]},"Control structure defined inline":{"values":{"no":23}},"Space before operator":{"values":{"1":57}},"Spacing before object operator":{"values":[112]},"Spacing after object operator":{"values":[112]},"Adjacent assignments aligned":{"values":{"yes":9}},"Short array syntax used":{"values":{"yes":10}},"Array end comma":{"values":{"yes":5,"no":5}},"PHP type case":{"values":{"lower":6}},"Spacing after cast statement":{"values":{"1":6}},"Spacing before string concat":{"values":{"1":9,"newline":5}},"Spacing after string concat":{"values":{"1":14}},"Inline comment style":{"values":{"\/\/ ...":3}}},"errorCount":102,"warningCount":0,"fixableCount":56,"numTokens":2960},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\src\\RendererPluginManager.php":{"hash":"bf7ef050036173f1357af46a0d578e2833206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"73":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"71":{"5":[{"message":"Doc comment for parameter \"$plugin\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"95":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"94":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"93":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"96":{"12":[{"message":"Method \\Laminas\\Barcode\\RendererPluginManager::validatePlugin() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":98}},"Line indent":{"values":{"spaces":78}},"PHP keyword case":{"values":{"lower":29}},"Multiple statements on same line":{"values":{"no":17}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Space after operator":{"values":{"1":25}},"PHP constant case":{"values":{"lower":2}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"yes":2}},"Spacing before object operator":{"values":[25]},"Spacing after object operator":{"values":[25]},"Inline comment style":{"values":{"\/\/ ...":3}},"CamelCase method name":{"values":{"yes":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":1}},"Space before operator":{"values":{"1":5}}},"errorCount":7,"warningCount":0,"fixableCount":2,"numTokens":681},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\AssertIsGdImageTrait.php":{"hash":"4de7311ea08d338695a48a5c184c761f33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"23":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"21":{"5":[{"message":"Doc comment for parameter \"$message\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":33}},"Line indent":{"values":{"spaces":18}},"PHP keyword case":{"values":{"lower":18}},"Multiple statements on same line":{"values":{"no":16}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":1}},"Space after operator":{"values":{"1":6}},"Space before operator":{"values":{"1":6}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}},"Spacing before object operator":{"values":[4]},"Spacing after object operator":{"values":[4]},"PHP constant case":{"values":{"lower":1}}},"errorCount":4,"warningCount":0,"fixableCount":1,"numTokens":260},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\FactoryTest.php":{"hash":"e598dc674eaafb06d8f86f5564fe32b233206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"46":{"12":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"66":{"12":[{"message":"Missing doc comment for function tearDown()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"71":{"12":[{"message":"Missing doc comment for function testMinimalFactory()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testMinimalFactory() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"81":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"82":{"12":[{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testMinimalFactoryWithRenderer() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"89":{"12":[{"message":"Missing doc comment for function testFactoryWithOptions()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithOptions() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"97":{"12":[{"message":"Missing doc comment for function testFactoryWithAutomaticExceptionRendering()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithAutomaticExceptionRendering() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"106":{"12":[{"message":"Missing doc comment for function testFactoryWithoutAutomaticObjectExceptionRendering()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithoutAutomaticObjectExceptionRendering() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"113":{"12":[{"message":"Missing doc comment for function testFactoryWithoutAutomaticRendererExceptionRendering()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithoutAutomaticRendererExceptionRendering() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"122":{"12":[{"message":"Missing doc comment for function testFactoryWithLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"134":{"12":[{"message":"Missing doc comment for function testFactoryWithLaminasConfigAndObjectOptions()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithLaminasConfigAndObjectOptions() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Missing doc comment for function testFactoryWithLaminasConfigAndRendererOptions()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithLaminasConfigAndRendererOptions() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"164":{"12":[{"message":"Missing doc comment for function testFactoryWithoutBarcodeWithAutomaticExceptionRender()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithoutBarcodeWithAutomaticExceptionRender() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"172":{"12":[{"message":"Missing doc comment for function testFactoryWithoutBarcodeWithAutomaticExceptionRenderWithLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithoutBarcodeWithAutomaticExceptionRenderWithLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"181":{"12":[{"message":"Missing doc comment for function testFactoryWithExistingBarcodeObject()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testFactoryWithExistingBarcodeObject() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"189":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithExistingBarcodeObject()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithExistingBarcodeObject() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"196":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithBarcodeAsString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithBarcodeAsString() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"205":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithBarcodeAsStringAndConfigAsArray()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithBarcodeAsStringAndConfigAsArray() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"212":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithBarcodeAsStringAndConfigAsLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithBarcodeAsStringAndConfigAsLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"220":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithBarcodeAsLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithBarcodeAsLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"233":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithBarcodeAsLaminasConfigButNoBarcodeParameter()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithBarcodeAsLaminasConfigButNoBarcodeParameter() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"240":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithBarcodeAsLaminasConfigAndBadBarcodeParameters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithBarcodeAsLaminasConfigAndBadBarcodeParameters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"246":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithNamespace()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithNamespace() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"254":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithNamespaceExtendStandardLibray()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithNamespaceExtendStandardLibray() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"262":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithNamespaceButWithoutExtendingObjectAbstract()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithNamespaceButWithoutExtendingObjectAbstract() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"282":{"12":[{"message":"Missing doc comment for function testBarcodeObjectFactoryWithUnexistentBarcode()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeObjectFactoryWithUnexistentBarcode() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"288":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithExistingBarcodeRenderer()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithExistingBarcodeRenderer() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"296":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithBarcodeAsString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithBarcodeAsString() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"306":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithBarcodeAsStringAndConfigAsArray()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithBarcodeAsStringAndConfigAsArray() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"315":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithBarcodeAsStringAndConfigAsLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithBarcodeAsStringAndConfigAsLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"324":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithBarcodeAsLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithBarcodeAsLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"336":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithBarcodeAsLaminasConfigButNoBarcodeParameter()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithBarcodeAsLaminasConfigButNoBarcodeParameter() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"343":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithBarcodeAsLaminasConfigAndBadBarcodeParameters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithBarcodeAsLaminasConfigAndBadBarcodeParameters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"349":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithNamespace()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithNamespace() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"358":{"12":[{"message":"Missing doc comment for function testBarcodeFactoryWithNamespaceButWithoutExtendingRendererAbstract()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeFactoryWithNamespaceButWithoutExtendingRendererAbstract() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"378":{"12":[{"message":"Missing doc comment for function testBarcodeRendererFactoryWithUnexistentRenderer()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testBarcodeRendererFactoryWithUnexistentRenderer() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"384":{"12":[{"message":"Missing doc comment for function testProxyBarcodeRendererDrawAsImage()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testProxyBarcodeRendererDrawAsImage() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"388":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"393":{"12":[{"message":"Missing doc comment for function testProxyBarcodeRendererDrawAsImageAutomaticallyRenderImageIfException()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testProxyBarcodeRendererDrawAsImageAutomaticallyRenderImageIfException() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"397":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"402":{"12":[{"message":"Missing doc comment for function testProxyBarcodeRendererDrawAsPdf()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testProxyBarcodeRendererDrawAsPdf() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"414":{"12":[{"message":"Missing doc comment for function testProxyBarcodeRendererDrawAsPdfAutomaticallyRenderPdfIfException()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testProxyBarcodeRendererDrawAsPdfAutomaticallyRenderPdfIfException() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"426":{"12":[{"message":"Missing doc comment for function testProxyBarcodeRendererDrawAsSvg()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testProxyBarcodeRendererDrawAsSvg() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"434":{"12":[{"message":"Missing doc comment for function testProxyBarcodeRendererDrawAsSvgAutomaticallyRenderSvgIfException()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testProxyBarcodeRendererDrawAsSvgAutomaticallyRenderSvgIfException() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"442":{"12":[{"message":"Missing doc comment for function testProxyBarcodeObjectFont()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::testProxyBarcodeObjectFont() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"450":{"15":[{"message":"Missing doc comment for function checkGDRequirement()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\FactoryTest::checkGDRequirement() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":359,"81-120":37}},"Line indent":{"values":{"spaces":364}},"PHP keyword case":{"values":{"lower":141}},"Multiple statements on same line":{"values":{"no":198}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":43}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":43}},"Function has doc comment":{"values":{"no":42,"yes":1}},"Spacing before object operator":{"values":[223]},"Spacing after object operator":{"values":[223]},"Space after operator":{"values":{"1":94}},"Inline comment style":{"values":{"\/\/ ...":9}},"PHP constant case":{"values":{"lower":10}},"Adjacent assignments aligned":{"values":{"yes":17}},"Short array syntax used":{"values":{"yes":29}},"Array end comma":{"values":{"no":21,"yes":8}},"Blank lines at start of control structure":{"values":[11]},"Blank lines at end of control structure":{"values":[11]},"Spaces after control structure open parenthesis":{"values":[9]},"Spaces before control structure close parenthesis":{"values":[9]},"Control structure defined inline":{"values":{"no":5}},"Spacing before string concat":{"values":{"1":4}},"Spacing after string concat":{"values":{"1":4}}},"errorCount":87,"warningCount":0,"fixableCount":44,"numTokens":3821},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\AbstractTest.php":{"hash":"3b4f1588026c23d410dbf1e0ae62196233206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"22":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\AbstractTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"25":{"24":[{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\AbstractObject\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"28":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"15":[{"message":"Type hint \"string\" missing for $fileName","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::loadInstructionsFile() does not have native type hint for its parameter $fileName but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::loadInstructionsFile() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"29":{"8":[{"message":"@return annotation of method \\LaminasTest\\Barcode\\Object\\AbstractTest::loadInstructionsFile() does not specify type hint for items of its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":false}]},"36":{"12":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"41":{"12":[{"message":"Missing doc comment for function tearDown()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"46":{"12":[{"message":"Missing doc comment for function testStaticFontAsString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testStaticFontAsString() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"55":{"12":[{"message":"Missing doc comment for function testStaticFontAsNumber()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testStaticFontAsNumber() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"66":{"12":[{"message":"Missing doc comment for function testConstructorWithArray()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testConstructorWithArray() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"77":{"12":[{"message":"Missing doc comment for function testConstructorWithLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testConstructorWithLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"89":{"12":[{"message":"Missing doc comment for function testSetOptions()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testSetOptions() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"12":[{"message":"Missing doc comment for function testBarcodeNamespace()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testBarcodeNamespace() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"106":{"12":[{"message":"Missing doc comment for function testBarHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testBarHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"116":{"12":[{"message":"Missing doc comment for function testNegativeBarHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testNegativeBarHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"122":{"12":[{"message":"Missing doc comment for function testBarThinWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testBarThinWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"132":{"12":[{"message":"Missing doc comment for function testNegativeBarThinWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testNegativeBarThinWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"138":{"12":[{"message":"Missing doc comment for function testBarThickWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testBarThickWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"148":{"12":[{"message":"Missing doc comment for function testNegativeBarThickWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testNegativeBarThickWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"154":{"12":[{"message":"Missing doc comment for function testFactor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testFactor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"166":{"12":[{"message":"Missing doc comment for function testNegativeFactor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testNegativeFactor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"172":{"12":[{"message":"Missing doc comment for function testForeColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testForeColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"180":{"12":[{"message":"Missing doc comment for function testNegativeForeColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testNegativeForeColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"186":{"12":[{"message":"Missing doc comment for function testTooHighForeColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testTooHighForeColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"192":{"12":[{"message":"Missing doc comment for function testBackgroundColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testBackgroundColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"200":{"12":[{"message":"Missing doc comment for function testNegativeBackgroundColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testNegativeBackgroundColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"206":{"12":[{"message":"Missing doc comment for function testTooHighBackgroundColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testTooHighBackgroundColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"212":{"12":[{"message":"Missing doc comment for function testWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"220":{"12":[{"message":"Missing doc comment for function testReverseColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testReverseColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"229":{"12":[{"message":"Missing doc comment for function testOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"243":{"12":[{"message":"Missing doc comment for function testDrawText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testDrawText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"251":{"12":[{"message":"Missing doc comment for function testStretchText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testStretchText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"259":{"12":[{"message":"Missing doc comment for function testWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"267":{"12":[{"message":"Missing doc comment for function testWithChecksumInText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testWithChecksumInText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"275":{"12":[{"message":"Missing doc comment for function testProvidedChecksumFalseByDefault()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testProvidedChecksumFalseByDefault() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"280":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"288":{"12":[{"message":"Missing doc comment for function testWithoutQuietZones()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testWithoutQuietZones() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"296":{"12":[{"message":"Missing doc comment for function testSetFontAsNumberForGdImage()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testSetFontAsNumberForGdImage() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"302":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"314":{"12":[{"message":"Missing doc comment for function testSetLowFontAsNumberForGdImage()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testSetLowFontAsNumberForGdImage() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"320":{"12":[{"message":"Missing doc comment for function testSetHighFontAsNumberForGdImage()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testSetHighFontAsNumberForGdImage() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"326":{"12":[{"message":"Missing doc comment for function testSetFontAsString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testSetFontAsString() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"332":{"12":[{"message":"Missing doc comment for function testSetFontAsBoolean()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testSetFontAsBoolean() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"338":{"12":[{"message":"Missing doc comment for function testFontAsNumberWithoutGd()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testFontAsNumberWithoutGd() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"344":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"349":{"12":[{"message":"Missing doc comment for function testFontSize()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testFontSize() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"355":{"12":[{"message":"Missing doc comment for function testFontSizeWithoutEffectWithGdInternalFont()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testFontSizeWithoutEffectWithGdInternalFont() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"361":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"367":{"12":[{"message":"Missing doc comment for function testStringFontSize()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testStringFontSize() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"373":{"12":[{"message":"Missing doc comment for function testStandardQuietZone()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testStandardQuietZone() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"380":{"12":[{"message":"Missing doc comment for function testAddInstruction()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testAddInstruction() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"397":{"12":[{"message":"Missing doc comment for function testAddPolygon()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testAddPolygon() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"413":{"12":[{"message":"Missing doc comment for function testAddPolygonWithDefaultColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testAddPolygonWithDefaultColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"430":{"12":[{"message":"Missing doc comment for function testAddText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testAddText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"462":{"12":[{"message":"Missing doc comment for function testAddTextWithDefaultColor()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testAddTextWithDefaultColor() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"487":{"12":[{"message":"Missing doc comment for function testCheckParamsFontWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testCheckParamsFontWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"496":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\AbstractTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":442,"81-120":2}},"Line indent":{"values":{"spaces":431}},"PHP keyword case":{"values":{"lower":132}},"Multiple statements on same line":{"values":{"no":200}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":51}},"PHP constant case":{"values":{"lower":32}},"Function has doc comment":{"values":{"yes":2,"no":49}},"Function opening brace placement":{"values":{"new line":50}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}},"PHP type case":{"values":{"lower":2}},"Spacing before object operator":{"values":[347]},"Spacing after object operator":{"values":[347]},"Space after operator":{"values":{"1":81}},"Spaces after control structure open parenthesis":{"values":[5]},"Spaces before control structure close parenthesis":{"values":[5]},"Blank lines at start of control structure":{"values":[5]},"Blank lines at end of control structure":{"values":[5]},"Control structure defined inline":{"values":{"no":5}},"Space before operator":{"values":{"1":3}},"Spacing between in\/decrementor and variable":{"values":[2]},"Short array syntax used":{"values":{"yes":19}},"Array end comma":{"values":{"yes":8,"no":11}},"Adjacent assignments aligned":{"values":{"yes":8}}},"errorCount":108,"warningCount":0,"fixableCount":54,"numTokens":3960},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\CodabarTest.php":{"hash":"49ab684a496ce6c503b0ad9f6174e7ce33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"16":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\CodabarTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"19":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Codabar\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"24":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"29":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"37":{"12":[{"message":"Missing doc comment for function testSetTextWithOddNumberOfCharacters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testSetTextWithOddNumberOfCharacters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"45":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"12":[{"message":"Missing doc comment for function testBadTextAlwaysAllowed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testBadTextAlwaysAllowed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"59":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"65":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"73":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"81":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testCompleteGenerationWithStretchText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"103":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"114":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchTextWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testCompleteGenerationWithStretchTextWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"126":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\CodabarTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":119,"81-120":1}},"Line indent":{"values":{"spaces":109}},"PHP keyword case":{"values":{"lower":36}},"Multiple statements on same line":{"values":{"no":57}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":14}},"PHP constant case":{"values":{"lower":7}},"Function opening brace placement":{"values":{"new line":14}},"Function has doc comment":{"values":{"yes":1,"no":13}},"Spacing before object operator":{"values":[118]},"Spacing after object operator":{"values":[118]},"Space after operator":{"values":{"1":6}}},"errorCount":30,"warningCount":0,"fixableCount":15,"numTokens":1057},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Code128Test.php":{"hash":"edfaa1ae87573c7dc095fd74acc2f72c33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"16":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Code128Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"19":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Code128\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"24":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"29":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testKnownBarcodeConversion()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testKnownBarcodeConversion() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"43":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"51":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"59":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testSetTextWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"68":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testSetTextWithChecksumDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"94":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testCompleteGenerationWithStretchText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"105":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"116":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"127":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchTextWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testCompleteGenerationWithStretchTextWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"139":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code128Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":129,"81-120":3}},"Line indent":{"values":{"spaces":121}},"PHP keyword case":{"values":{"lower":39}},"Multiple statements on same line":{"values":{"no":66}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":15}},"PHP constant case":{"values":{"lower":10}},"Function opening brace placement":{"values":{"new line":15}},"Function has doc comment":{"values":{"yes":1,"no":14}},"Spacing before object operator":{"values":[138]},"Spacing after object operator":{"values":[138]},"Space after operator":{"values":{"1":7}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}}},"errorCount":32,"warningCount":0,"fixableCount":16,"numTokens":1256},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Code25interleavedTest.php":{"hash":"dda112fbcd0ba8adbf3ae841a62189f433206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"17":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"20":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Code25interleaved\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"25":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"30":{"12":[{"message":"Missing doc comment for function testWithBearerBars()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testWithBearerBars() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"38":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"43":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"51":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"59":{"12":[{"message":"Missing doc comment for function testSetTextWithoutEvenNumberOfCharacters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testSetTextWithoutEvenNumberOfCharacters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"67":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testSetTextWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"76":{"12":[{"message":"Missing doc comment for function testSetTextWithoutEvenNumberOfCharactersWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testSetTextWithoutEvenNumberOfCharactersWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"85":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testSetTextWithChecksumDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"95":{"12":[{"message":"Missing doc comment for function testSetTextWithoutEvenNumberOfCharactersWithChecksumDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testSetTextWithoutEvenNumberOfCharactersWithChecksumDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"105":{"12":[{"message":"Missing doc comment for function testBadTextAlwaysAllowed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testBadTextAlwaysAllowed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"111":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"119":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"125":{"12":[{"message":"Missing doc comment for function testCheckParamsWithLowRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCheckParamsWithLowRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"134":{"12":[{"message":"Missing doc comment for function testCheckParamsWithHighRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCheckParamsWithHighRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"143":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"151":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"159":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGenerationWithStretchText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"170":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"181":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBearerBars()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGenerationWithBearerBars() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"192":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"203":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchTextWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGenerationWithStretchTextWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"215":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"227":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBearerBarsWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25interleavedTest::testCompleteGenerationWithBearerBarsWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":208,"81-120":2}},"Line indent":{"values":{"spaces":198}},"PHP keyword case":{"values":{"lower":59}},"Multiple statements on same line":{"values":{"no":110}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":25}},"PHP constant case":{"values":{"lower":19}},"Function opening brace placement":{"values":{"new line":25}},"Function has doc comment":{"values":{"yes":1,"no":24}},"Spacing before object operator":{"values":[237]},"Spacing after object operator":{"values":[237]},"Space after operator":{"values":{"1":8}}},"errorCount":52,"warningCount":0,"fixableCount":26,"numTokens":1945},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Code25Test.php":{"hash":"8fefec280050db5e5db3fd63db4e4cc933206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"17":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Code25Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"20":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Code25\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"25":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"30":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testSetTextWithOddNumberOfCharacters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testSetTextWithOddNumberOfCharacters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"60":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testSetTextWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testSetTextWithChecksumDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"79":{"12":[{"message":"Missing doc comment for function testBadTextAlwaysAllowed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testBadTextAlwaysAllowed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"85":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"93":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"99":{"12":[{"message":"Missing doc comment for function testCheckParamsWithLowRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCheckParamsWithLowRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"12":[{"message":"Missing doc comment for function testCheckParamsWithHighRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCheckParamsWithHighRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"117":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"125":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"133":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCompleteGenerationWithStretchText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"144":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"155":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"166":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchTextWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCompleteGenerationWithStretchTextWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"178":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code25Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":165,"81-120":1}},"Line indent":{"values":{"spaces":154}},"PHP keyword case":{"values":{"lower":49}},"Multiple statements on same line":{"values":{"no":85}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":20}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":20}},"Function has doc comment":{"values":{"yes":1,"no":19}},"Spacing before object operator":{"values":[180]},"Spacing after object operator":{"values":[180]},"Space after operator":{"values":{"1":6}}},"errorCount":42,"warningCount":0,"fixableCount":21,"numTokens":1518},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Code39Test.php":{"hash":"cd38567c8a1106e7bca3d8853d3532fd33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"17":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Code39Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"20":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Code39\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"25":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"30":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"37":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"45":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testSetTextWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"62":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testSetTextWithChecksumDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"72":{"12":[{"message":"Missing doc comment for function testBadTextAlwaysAllowed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testBadTextAlwaysAllowed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testCheckParamsWithLowRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCheckParamsWithLowRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"101":{"12":[{"message":"Missing doc comment for function testCheckParamsWithHighRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCheckParamsWithHighRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"110":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"118":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"126":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCompleteGenerationWithStretchText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"137":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"148":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"159":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchTextWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCompleteGenerationWithStretchTextWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"171":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"183":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation270()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Code39Test::testCompleteGenerationWithOrientation270() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":168,"81-120":2}},"Line indent":{"values":{"spaces":158}},"PHP keyword case":{"values":{"lower":49}},"Multiple statements on same line":{"values":{"no":87}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":20}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":20}},"Function has doc comment":{"values":{"yes":1,"no":19}},"Spacing before object operator":{"values":[182]},"Spacing after object operator":{"values":[182]},"Space after operator":{"values":{"1":7}}},"errorCount":42,"warningCount":0,"fixableCount":21,"numTokens":1540},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Ean13Test.php":{"hash":"af0b866ba09ea121d9718ab0bb584fb033206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Ean13Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Ean13\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"26":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testSetTextWithout13Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testSetTextWithout13Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"61":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"119":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"130":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"142":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"155":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"162":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean13Test::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":147,"81-120":1}},"Line indent":{"values":{"spaces":135}},"PHP keyword case":{"values":{"lower":50}},"Multiple statements on same line":{"values":{"no":73}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":19}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":19}},"Function has doc comment":{"values":{"yes":1,"no":18}},"Spacing before object operator":{"values":[154]},"Spacing after object operator":{"values":[154]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":40,"warningCount":0,"fixableCount":20,"numTokens":1357},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Ean2Test.php":{"hash":"d0841bf6526ef6e7d5b24876896edbef33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"16":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Ean2Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"19":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Ean2\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"24":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"29":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"34":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"42":{"12":[{"message":"Missing doc comment for function testSetTextWithout2Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testSetTextWithout2Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"50":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"59":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"67":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"76":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"82":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"90":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"98":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"109":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"120":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"132":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"139":{"12":[{"message":"Missing doc comment for function testTextToDisplayWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testTextToDisplayWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Missing doc comment for function testTextToDisplayWithoutChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean2Test::testTextToDisplayWithoutChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":136}},"Line indent":{"values":{"spaces":125}},"PHP keyword case":{"values":{"lower":42}},"Multiple statements on same line":{"values":{"no":67}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":17}},"PHP constant case":{"values":{"lower":10}},"Function opening brace placement":{"values":{"new line":17}},"Function has doc comment":{"values":{"yes":1,"no":16}},"Spacing before object operator":{"values":[151]},"Spacing after object operator":{"values":[151]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":36,"warningCount":0,"fixableCount":18,"numTokens":1288},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Ean5Test.php":{"hash":"b83e4350c2a92c32a5d79ccc9ff0fb0733206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"17":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Ean5Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"20":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Ean5\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"25":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"33":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::checksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Generator\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"42":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"43":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"45":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $checksum","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testChecksum() does not have native type hint for its parameter $checksum but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"50":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"58":{"12":[{"message":"Missing doc comment for function testSetTextWithout13Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testSetTextWithout13Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"66":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"75":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"83":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"98":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"106":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"114":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"125":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"136":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"148":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"155":{"12":[{"message":"Missing doc comment for function testTextToDisplayWithChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testTextToDisplayWithChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"165":{"12":[{"message":"Missing doc comment for function testTextToDisplayWithoutChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean5Test::testTextToDisplayWithoutChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":151}},"Line indent":{"values":{"spaces":139}},"PHP keyword case":{"values":{"lower":48}},"Multiple statements on same line":{"values":{"no":71}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":18}},"PHP constant case":{"values":{"lower":10}},"Function opening brace placement":{"values":{"new line":18}},"Function has doc comment":{"values":{"yes":3,"no":15}},"Spacing before object operator":{"values":[151]},"Spacing after object operator":{"values":[151]},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":45,"warningCount":0,"fixableCount":23,"numTokens":1386},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Ean8Test.php":{"hash":"076ac439839e44aba962a2d3701f9ce433206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Ean8Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Ean8\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"26":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testSetTextWithout8Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testSetTextWithout8Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"61":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"119":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"130":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"142":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"155":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"162":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Ean8Test::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":148}},"Line indent":{"values":{"spaces":135}},"PHP keyword case":{"values":{"lower":50}},"Multiple statements on same line":{"values":{"no":73}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":19}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":19}},"Function has doc comment":{"values":{"yes":1,"no":18}},"Spacing before object operator":{"values":[154]},"Spacing after object operator":{"values":[154]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":40,"warningCount":0,"fixableCount":20,"numTokens":1357},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\ErrorTest.php":{"hash":"7a76e34e3c09e67b3f360886419d1b4a33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"16":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\ErrorTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"19":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\ErrorTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Error\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"24":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\ErrorTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"29":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\ErrorTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"37":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\ErrorTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"43":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\ErrorTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"48":{"12":[{"message":"Missing doc comment for function testGetDefaultWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\ErrorTest::testGetDefaultWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\ErrorTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":48,"81-120":2}},"Line indent":{"values":{"spaces":39}},"PHP keyword case":{"values":{"lower":22}},"Multiple statements on same line":{"values":{"no":18}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":7}},"PHP constant case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":1,"no":6}},"Spacing before object operator":{"values":[33]},"Spacing after object operator":{"values":[33]},"Space after operator":{"values":{"1":1}}},"errorCount":16,"warningCount":0,"fixableCount":8,"numTokens":406},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\IdentcodeTest.php":{"hash":"d169ae783b14722accd9596784837f9b33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"19":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"22":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Identcode\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"27":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"35":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::checksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Generator\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"50":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"48":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"51":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $checksum","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testChecksum() does not have native type hint for its parameter $checksum but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"56":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"64":{"12":[{"message":"Missing doc comment for function testSetTextWithout13Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testSetTextWithout13Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"72":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"81":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"89":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"98":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"106":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"112":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"120":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"128":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"139":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"150":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"162":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"169":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"175":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"182":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\IdentcodeTest::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":161,"81-120":6}},"Line indent":{"values":{"spaces":153}},"PHP keyword case":{"values":{"lower":60}},"Multiple statements on same line":{"values":{"no":81}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":20}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":20}},"Function has doc comment":{"values":{"yes":3,"no":17}},"Spacing before object operator":{"values":[154]},"Spacing after object operator":{"values":[154]},"Short array syntax used":{"values":{"yes":7}},"Array end comma":{"values":{"no":7}},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":49,"warningCount":0,"fixableCount":25,"numTokens":1499},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\Itf14Test.php":{"hash":"da4eb306cf3398e6d748e2a9e92e53be33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\Itf14Test::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Itf14\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"26":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testSetTextWithout14Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testSetTextWithout14Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"61":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testCheckParamsWithLowRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCheckParamsWithLowRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"101":{"12":[{"message":"Missing doc comment for function testCheckParamsWithHighRatio()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCheckParamsWithHighRatio() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"110":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"118":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"126":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGenerationWithStretchText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"137":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"148":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBearerBars()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGenerationWithBearerBars() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"159":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"170":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithStretchTextWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGenerationWithStretchTextWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"182":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"194":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBearerBarsWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testCompleteGenerationWithBearerBarsWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"206":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"213":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"219":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"226":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\Itf14Test::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":205,"81-120":1}},"Line indent":{"values":{"spaces":193}},"PHP keyword case":{"values":{"lower":62}},"Multiple statements on same line":{"values":{"no":105}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":25}},"PHP constant case":{"values":{"lower":15}},"Function opening brace placement":{"values":{"new line":25}},"Function has doc comment":{"values":{"yes":1,"no":24}},"Spacing before object operator":{"values":[218]},"Spacing after object operator":{"values":[218]},"Space after operator":{"values":{"1":8}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":52,"warningCount":0,"fixableCount":26,"numTokens":1851},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\LeitcodeTest.php":{"hash":"15666b35dd57c55b5d2d4f9d5706d1c033206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"19":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"22":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Leitcode\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"27":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"35":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::checksum() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Generator\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"53":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"51":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"52":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Expected 4 spaces after parameter type; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"54":{"12":[{"message":"Type hint \"string\" missing for $text","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"int\" missing for $checksum","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testChecksum() does not have native type hint for its parameter $text but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testChecksum() does not have native type hint for its parameter $checksum but it should be possible to add it based on @param annotation \"int\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"59":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"67":{"12":[{"message":"Missing doc comment for function testSetTextWithout13Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testSetTextWithout13Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"75":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"84":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"101":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"109":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"115":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"123":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"131":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"142":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"153":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"165":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"172":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"178":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"185":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\LeitcodeTest::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":162,"81-120":8}},"Line indent":{"values":{"spaces":156}},"PHP keyword case":{"values":{"lower":63}},"Multiple statements on same line":{"values":{"no":84}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":20}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":20}},"Function has doc comment":{"values":{"yes":3,"no":17}},"Spacing before object operator":{"values":[154]},"Spacing after object operator":{"values":[154]},"Short array syntax used":{"values":{"yes":10}},"Array end comma":{"values":{"no":10}},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":49,"warningCount":0,"fixableCount":25,"numTokens":1532},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\PlanetTest.php":{"hash":"102dbd135071ce9e4eeac461c622c9aa33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"17":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\PlanetTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"20":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Planet\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"25":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"30":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testSetTextWithoutGoodNumberOfCharacters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testSetTextWithoutGoodNumberOfCharacters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"51":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"60":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"68":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"77":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"85":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"91":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"99":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"107":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"118":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"129":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"141":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PlanetTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":127,"81-120":1}},"Line indent":{"values":{"spaces":116}},"PHP keyword case":{"values":{"lower":41}},"Multiple statements on same line":{"values":{"no":62}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":16}},"PHP constant case":{"values":{"lower":9}},"Function opening brace placement":{"values":{"new line":16}},"Function has doc comment":{"values":{"yes":1,"no":15}},"Spacing before object operator":{"values":[131]},"Spacing after object operator":{"values":[131]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":34,"warningCount":0,"fixableCount":17,"numTokens":1160},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\PostnetTest.php":{"hash":"d4e831119629e9da90f1d09ab8ff458633206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\PostnetTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Postnet\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"26":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"37":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"45":{"12":[{"message":"Missing doc comment for function testSetTextWithoutGoodNumberOfCharacters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testSetTextWithoutGoodNumberOfCharacters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"61":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"119":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"130":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"142":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"155":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"162":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\PostnetTest::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":147,"81-120":1}},"Line indent":{"values":{"spaces":135}},"PHP keyword case":{"values":{"lower":50}},"Multiple statements on same line":{"values":{"no":73}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":19}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":19}},"Function has doc comment":{"values":{"yes":1,"no":18}},"Spacing before object operator":{"values":[152]},"Spacing after object operator":{"values":[152]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":40,"warningCount":0,"fixableCount":20,"numTokens":1343},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\RoyalmailTest.php":{"hash":"d90d34320b37a23ffa60378a211dcefb33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Royalmail\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"26":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"38":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"46":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"55":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"63":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"72":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"80":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"94":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"102":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"113":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"124":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"136":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"143":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"156":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\RoyalmailTest::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":142,"81-120":1}},"Line indent":{"values":{"spaces":130}},"PHP keyword case":{"values":{"lower":48}},"Multiple statements on same line":{"values":{"no":71}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":18}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":18}},"Function has doc comment":{"values":{"yes":1,"no":17}},"Spacing before object operator":{"values":[149]},"Spacing after object operator":{"values":[149]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":38,"warningCount":0,"fixableCount":19,"numTokens":1314},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\UpcaTest.php":{"hash":"36e5d0877376db1dd1c9542a57ebf20133206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\UpcaTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Upca\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"26":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testSetTextWithout13Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testSetTextWithout13Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"61":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"78":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"119":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"130":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"142":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"149":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"155":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"162":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpcaTest::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":147,"81-120":1}},"Line indent":{"values":{"spaces":135}},"PHP keyword case":{"values":{"lower":50}},"Multiple statements on same line":{"values":{"no":73}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":19}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":19}},"Function has doc comment":{"values":{"yes":1,"no":18}},"Spacing before object operator":{"values":[154]},"Spacing after object operator":{"values":[154]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":40,"warningCount":0,"fixableCount":20,"numTokens":1357},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Object\\UpceTest.php":{"hash":"deb7974304cf1e845f711825057f1d8833206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Object\\UpceTest::getBarcodeObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::getBarcodeObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Object\\Upce\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"26":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"31":{"12":[{"message":"Missing doc comment for function testChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"36":{"12":[{"message":"Missing doc comment for function testSetText()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testSetText() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testSetTextWithout8Characters()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testSetTextWithout8Characters() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"12":[{"message":"Missing doc comment for function testSetTextWithout0or1AtBeginning()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testSetTextWithout0or1AtBeginning() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"60":{"12":[{"message":"Missing doc comment for function testSetTextWithoutChecksumHasNoEffect()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testSetTextWithoutChecksumHasNoEffect() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"69":{"12":[{"message":"Missing doc comment for function testSetTextWithSpaces()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testSetTextWithSpaces() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"77":{"12":[{"message":"Missing doc comment for function testSetTextWithChecksumNotDisplayed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testSetTextWithChecksumNotDisplayed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"86":{"12":[{"message":"Missing doc comment for function testBadTextDetectedIfChecksumWished()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testBadTextDetectedIfChecksumWished() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"94":{"12":[{"message":"Missing doc comment for function testCheckGoodParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testCheckGoodParams() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"12":[{"message":"Missing doc comment for function testGetKnownWidthWithoutOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testGetKnownWidthWithoutOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"12":[{"message":"Missing doc comment for function testCompleteGeneration()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testCompleteGeneration() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"116":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorder()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testCompleteGenerationWithBorder() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"127":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testCompleteGenerationWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"138":{"12":[{"message":"Missing doc comment for function testCompleteGenerationWithBorderWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testCompleteGenerationWithBorderWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"150":{"12":[{"message":"Missing doc comment for function testGetDefaultHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testGetDefaultHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"157":{"12":[{"message":"Missing doc comment for function testChecksumIsNotProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testChecksumIsNotProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"163":{"12":[{"message":"Missing doc comment for function testProvidedChecksum()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testProvidedChecksum() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"170":{"12":[{"message":"Missing doc comment for function testProvidedChecksumInvalid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Object\\UpceTest::testProvidedChecksumInvalid() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":154,"81-120":1}},"Line indent":{"values":{"spaces":142}},"PHP keyword case":{"values":{"lower":52}},"Multiple statements on same line":{"values":{"no":77}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":20}},"PHP constant case":{"values":{"lower":11}},"Function opening brace placement":{"values":{"new line":20}},"Function has doc comment":{"values":{"yes":1,"no":19}},"Spacing before object operator":{"values":[165]},"Spacing after object operator":{"values":[165]},"Space after operator":{"values":{"1":4}},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":42,"warningCount":0,"fixableCount":21,"numTokens":1438},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\ObjectPluginManagerCompatibilityTest.php":{"hash":"2f4ad16f26a76cd6284596f43021b12f33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"21":{"15":[{"message":"Method \\LaminasTest\\Barcode\\ObjectPluginManagerCompatibilityTest::getPluginManager() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"ObjectPluginManager\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"29":{"15":[{"message":"Method \\LaminasTest\\Barcode\\ObjectPluginManagerCompatibilityTest::getV2InvalidPluginException() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"37":{"15":[{"message":"Method \\LaminasTest\\Barcode\\ObjectPluginManagerCompatibilityTest::getInstanceOf() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":34}},"Line indent":{"values":{"spaces":22}},"PHP keyword case":{"values":{"lower":22}},"Multiple statements on same line":{"values":{"no":12}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"yes":3}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":4,"warningCount":0,"fixableCount":4,"numTokens":216},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Renderer\\AbstractTest.php":{"hash":"7848c6616e7d161abd67f19af4a1ecf833206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"32":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::getRendererObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"35":{"24":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::getRendererObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractRenderer\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"37":{"12":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"12":[{"message":"Missing doc comment for function tearDown()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"57":{"12":[{"message":"Missing doc comment for function testSetBarcodeObject()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testSetBarcodeObject() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"64":{"12":[{"message":"Missing doc comment for function testGoodModuleSize()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testGoodModuleSize() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"70":{"12":[{"message":"Missing doc comment for function testModuleSizeAsString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testModuleSizeAsString() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"76":{"12":[{"message":"Missing doc comment for function testModuleSizeLessThan0()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testModuleSizeLessThan0() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"82":{"12":[{"message":"Missing doc comment for function testAutomaticRenderError()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testAutomaticRenderError() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"90":{"12":[{"message":"Missing doc comment for function testGoodHorizontalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testGoodHorizontalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"101":{"12":[{"message":"Missing doc comment for function testBadHorizontalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testBadHorizontalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"107":{"12":[{"message":"Missing doc comment for function testGoodVerticalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testGoodVerticalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"118":{"12":[{"message":"Missing doc comment for function testBadVerticalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testBadVerticalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"124":{"12":[{"message":"Missing doc comment for function testGoodLeftOffset()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testGoodLeftOffset() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"133":{"12":[{"message":"Missing doc comment for function testBadLeftOffset()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testBadLeftOffset() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"139":{"12":[{"message":"Missing doc comment for function testGoodTopOffset()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testGoodTopOffset() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"148":{"12":[{"message":"Missing doc comment for function testBadTopOffset()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testBadTopOffset() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"154":{"12":[{"message":"Missing doc comment for function testConstructorWithArray()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testConstructorWithArray() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"165":{"12":[{"message":"Missing doc comment for function testConstructorWithLaminasConfig()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testConstructorWithLaminasConfig() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"177":{"12":[{"message":"Missing doc comment for function testSetOptions()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testSetOptions() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"189":{"12":[{"message":"Missing doc comment for function testRendererNamespace()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testRendererNamespace() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"195":{"12":[{"message":"Missing doc comment for function testRendererWithUnkownInstructionProvideByObject()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testRendererWithUnkownInstructionProvideByObject() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"205":{"12":[{"message":"Missing doc comment for function testBarcodeObjectProvided()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testBarcodeObjectProvided() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"211":{"21":[{"message":"Missing doc comment for function testDrawReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testDrawReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"213":{"21":[{"message":"Missing doc comment for function testDrawWithExistantResourceReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testDrawWithExistantResourceReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"215":{"24":[{"message":"Missing doc comment for function getRendererWithWidth500AndHeight300()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::getRendererWithWidth500AndHeight300() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"217":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToLeft()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testHorizontalPositionToLeft() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"228":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToCenter()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testHorizontalPositionToCenter() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"240":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToRight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testHorizontalPositionToRight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"252":{"12":[{"message":"Missing doc comment for function testLeftOffsetOverrideHorizontalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testLeftOffsetOverrideHorizontalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"265":{"12":[{"message":"Missing doc comment for function testVerticalPositionToTop()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testVerticalPositionToTop() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"277":{"12":[{"message":"Missing doc comment for function testVerticalPositionToMiddle()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testVerticalPositionToMiddle() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"289":{"12":[{"message":"Missing doc comment for function testVerticalPositionToBottom()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testVerticalPositionToBottom() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"301":{"12":[{"message":"Missing doc comment for function testTopOffsetOverrideVerticalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\AbstractTest::testTopOffsetOverrideVerticalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":270,"81-120":2}},"Line indent":{"values":{"spaces":256}},"PHP keyword case":{"values":{"lower":104}},"Multiple statements on same line":{"values":{"no":142}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":33}},"PHP constant case":{"values":{"lower":12}},"Function has doc comment":{"values":{"yes":1,"no":32}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":29}},"Spacing before object operator":{"values":[191]},"Spacing after object operator":{"values":[191]},"Space after operator":{"values":{"1":38}},"Inline comment style":{"values":{"\/\/ ...":2}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"Short array syntax used":{"values":{"yes":14}},"Array end comma":{"values":{"no":11,"yes":3}},"Adjacent assignments aligned":{"values":{"yes":1}}},"errorCount":66,"warningCount":0,"fixableCount":32,"numTokens":2442},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Renderer\\ImageTest.php":{"hash":"95bf307c5b8e1e3d7b00a11b4c278b6c33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"27":{"12":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"36":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Renderer\\ImageTest::getRendererObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"39":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::getRendererObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"RendererNS\\Image\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"44":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"51":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"52":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testGoodImageResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"58":{"12":[{"message":"Missing doc comment for function testObjectImageResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testObjectImageResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"65":{"12":[{"message":"Missing doc comment for function testGoodHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testGoodHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"74":{"12":[{"message":"Missing doc comment for function testBadHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testBadHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"80":{"12":[{"message":"Missing doc comment for function testGoodWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testGoodWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"89":{"12":[{"message":"Missing doc comment for function testBadWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testBadWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"95":{"12":[{"message":"Missing doc comment for function testAllowedImageType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testAllowedImageType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"112":{"12":[{"message":"Missing doc comment for function testNonAllowedImageType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testNonAllowedImageType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"118":{"12":[{"message":"Missing doc comment for function testDrawReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testDrawReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"127":{"12":[{"message":"Missing doc comment for function testDrawWithExistantResourceReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testDrawWithExistantResourceReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"139":{"12":[{"message":"Missing doc comment for function testGoodUserHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testGoodUserHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"148":{"12":[{"message":"Missing doc comment for function testBadUserHeightLessThanBarcodeHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testBadUserHeightLessThanBarcodeHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"158":{"12":[{"message":"Missing doc comment for function testGoodUserWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testGoodUserWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"167":{"12":[{"message":"Missing doc comment for function testBadUserWidthLessThanBarcodeWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testBadUserWidthLessThanBarcodeWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"177":{"12":[{"message":"Missing doc comment for function testGoodHeightOfUserResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testGoodHeightOfUserResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"187":{"12":[{"message":"Missing doc comment for function testBadHeightOfUserResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testBadHeightOfUserResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"198":{"12":[{"message":"Missing doc comment for function testGoodWidthOfUserResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testGoodWidthOfUserResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"208":{"12":[{"message":"Missing doc comment for function testBadWidthOfUserResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testBadWidthOfUserResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"219":{"12":[{"message":"Missing doc comment for function testNoFontWithOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testNoFontWithOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"232":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::getRendererWithWidth500AndHeight300() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"RendererNS\\Image\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"237":{"12":[{"message":"Missing doc comment for function testRendererWithUnkownInstructionProvideByObject()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testRendererWithUnkownInstructionProvideByObject() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"243":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToLeft()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testHorizontalPositionToLeft() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"250":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToCenter()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testHorizontalPositionToCenter() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"257":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToRight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testHorizontalPositionToRight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"264":{"12":[{"message":"Missing doc comment for function testVerticalPositionToTop()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testVerticalPositionToTop() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"271":{"12":[{"message":"Missing doc comment for function testVerticalPositionToMiddle()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testVerticalPositionToMiddle() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"278":{"12":[{"message":"Missing doc comment for function testVerticalPositionToBottom()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testVerticalPositionToBottom() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"285":{"12":[{"message":"Missing doc comment for function testLeftOffsetOverrideHorizontalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testLeftOffsetOverrideHorizontalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"292":{"12":[{"message":"Missing doc comment for function testTopOffsetOverrideVerticalPosition()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testTopOffsetOverrideVerticalPosition() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"301":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"302":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testImageGifWithNoTransparency() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"319":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"320":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testImagePngWithNoTransparency() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"337":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"338":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testImageGifWithTransparency() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"355":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"356":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::testImagePngWithTransparency() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"371":{"15":[{"message":"Missing doc comment for function checkTTFRequirement()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\ImageTest::checkTTFRequirement() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":317,"81-120":2}},"Line indent":{"values":{"spaces":299}},"PHP keyword case":{"values":{"lower":124}},"Multiple statements on same line":{"values":{"no":161}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":37}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":37}},"Function has doc comment":{"values":{"no":30,"yes":7}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"Spacing before object operator":{"values":[224]},"Spacing after object operator":{"values":[224]},"PHP constant case":{"values":{"lower":6}},"Space after operator":{"values":{"1":53}},"Short array syntax used":{"values":{"yes":16}},"Array end comma":{"values":{"yes":1,"no":15}},"Inline comment style":{"values":{"\/\/ ...":4}},"Adjacent assignments aligned":{"values":{"yes":4}}},"errorCount":75,"warningCount":0,"fixableCount":38,"numTokens":2810},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Renderer\\PdfTest.php":{"hash":"d101218dd4b63dcbb5071cd0cd661e4233206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"20":{"12":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"29":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Renderer\\PdfTest::getRendererObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"32":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::getRendererObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Renderer\\Pdf\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"37":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"42":{"12":[{"message":"Missing doc comment for function testGoodPdfResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testGoodPdfResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"48":{"12":[{"message":"Missing doc comment for function testDrawReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testDrawReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"58":{"12":[{"message":"Missing doc comment for function testDrawWithExistantResourceReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testDrawWithExistantResourceReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"74":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::getRendererWithWidth500AndHeight300() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Barcode\\Renderer\\Pdf\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"81":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToCenter()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testHorizontalPositionToCenter() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"92":{"12":[{"message":"Missing doc comment for function testHorizontalPositionToRight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testHorizontalPositionToRight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"103":{"12":[{"message":"Missing doc comment for function testVerticalPositionToMiddle()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testVerticalPositionToMiddle() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"114":{"12":[{"message":"Missing doc comment for function testVerticalPositionToBottom()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\PdfTest::testVerticalPositionToBottom() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":108,"81-120":1}},"Line indent":{"values":{"spaces":94}},"PHP keyword case":{"values":{"lower":48}},"Multiple statements on same line":{"values":{"no":60}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":11}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":11}},"Function has doc comment":{"values":{"no":9,"yes":2}},"Spaces after control structure open parenthesis":{"values":[1]},"Spaces before control structure close parenthesis":{"values":[1]},"Blank lines at start of control structure":{"values":[1]},"Blank lines at end of control structure":{"values":[1]},"Control structure defined inline":{"values":{"no":1}},"Spacing before object operator":{"values":[61]},"Spacing after object operator":{"values":[61]},"PHP constant case":{"values":{"lower":1}},"Space after operator":{"values":{"1":22}},"Spacing before string concat":{"values":{"1":2}},"Spacing after string concat":{"values":{"1":2}},"Short array syntax used":{"values":{"yes":6}},"Array end comma":{"values":{"no":6}},"Adjacent assignments aligned":{"values":{"yes":5}}},"errorCount":23,"warningCount":0,"fixableCount":12,"numTokens":1011},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\Renderer\\SvgTest.php":{"hash":"77248128c4321a5c9ca980b9c2036a7233206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"20":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"@param annotation of method \\LaminasTest\\Barcode\\Renderer\\SvgTest::getRendererObject() does not specify type hint for items of its traversable parameter $options.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":false}]},"23":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::getRendererObject() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Svg\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"32":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"33":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testSvgNoTransparency() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"48":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testSvgTransparency() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"60":{"12":[{"message":"Missing doc comment for function testSvgOrientation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testSvgOrientation() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"71":{"12":[{"message":"Missing doc comment for function testType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testType() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"76":{"12":[{"message":"Missing doc comment for function testGoodHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testGoodHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"85":{"12":[{"message":"Missing doc comment for function testBadHeight()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testBadHeight() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"91":{"12":[{"message":"Missing doc comment for function testGoodWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testGoodWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"100":{"12":[{"message":"Missing doc comment for function testBadWidth()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testBadWidth() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"108":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"109":{"12":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testGoodSvgResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"115":{"12":[{"message":"Missing doc comment for function testDrawReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testDrawReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"125":{"12":[{"message":"Missing doc comment for function testDrawWithExistantResourceReturnResource()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::testDrawWithExistantResourceReturnResource() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"147":{"15":[{"message":"Method \\LaminasTest\\Barcode\\Renderer\\SvgTest::getRendererWithWidth500AndHeight300() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"Svg\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":138,"81-120":3}},"Line indent":{"values":{"spaces":126}},"PHP keyword case":{"values":{"lower":47}},"Multiple statements on same line":{"values":{"no":75}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":13}},"PHP constant case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":13}},"Function has doc comment":{"values":{"yes":5,"no":8}},"Spacing before object operator":{"values":[104]},"Spacing after object operator":{"values":[104]},"Spacing before string concat":{"values":{"1":8}},"Spacing after string concat":{"values":{"1":8}},"Space after operator":{"values":{"1":21}},"Short array syntax used":{"values":{"yes":5}},"Array end comma":{"values":{"no":5}},"Adjacent assignments aligned":{"values":{"yes":2}}},"errorCount":27,"warningCount":0,"fixableCount":14,"numTokens":1325},"D:\\xampp_7\\htdocs\\laminas\\laminas-barcode\\test\\RendererPluginManagerCompatibilityTest.php":{"hash":"f7c06ce11ab12b8075a72f4745ed5d8e33206","errors":{"1":{"1":[{"message":"End of line character is invalid; expected \"\\n\" but found \"\\r\\n\"","source":"Generic.Files.LineEndings.InvalidEOLChar","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineEndingsSniff","severity":5,"fixable":true}]},"18":{"15":[{"message":"Missing doc comment for function getPluginManager()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"23":{"15":[{"message":"Missing doc comment for function getV2InvalidPluginException()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"28":{"15":[{"message":"Missing doc comment for function getInstanceOf()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\r\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":25}},"Line indent":{"values":{"spaces":13}},"PHP keyword case":{"values":{"lower":22}},"Multiple statements on same line":{"values":{"no":12}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"no":3}},"PHP type case":{"values":{"lower":2}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":4,"warningCount":0,"fixableCount":1,"numTokens":186}}